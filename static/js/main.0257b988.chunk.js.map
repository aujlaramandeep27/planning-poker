{"version":3,"sources":["resources/images/pp_logo_transaparent.png","serviceWorker.js","Fetch.api.js","Meetings/API/Meeting.api.js","Common/selectors.js","Stories/API/Stories.api.js","Stories/Actions/StoryEstimateActions.js","Meetings/Actions/CurrentStoryActions.js","Meetings/Actions/CurrentMeetingActions.js","Navigation/route-actions.js","Meetings/Actions/MeetingsActions.js","Common/Page.js","Meetings/Components/Meetings/Meetings.js","Stories/Actions/StoriesActions.js","Stories/Components/Stories/Stories.js","Stories/Components/StoryEstimate/StoryEstimate.js","Meetings/Components/CreateMeeting/CreateMeeting.js","User/API/User.api.js","User/Actions/UserActions.js","User/Components/CreateUser.js","Stories/Components/CreateStory/CreateStory.js","Stories/Actions/StoryEstimatesActions.js","Stories/Components/StorySummary/StorySummary.js","User/Reducers/UserReducer.js","Stories/Reducers/StoryEstimateReducer.js","Meetings/Reducers/MeetingsReducer.js","Stories/Reducers/StoriesReducer.js","ErrorReducer.js","Meetings/Reducers/CurrentMeetingReducer.js","Meetings/Reducers/CurrentStoryReducer.js","Stories/Reducers/StoryEstimatesReducer.js","RootReducer.js","store.js","index.js","App/App.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","defaultHeaderConfigs","headers","Content-Type","mode","API_URL","process","REACT_APP_API_URL","getData","url","fetch","then","response","ok","Error","status","json","catch","error","postData","arguments","length","undefined","data","method","cache","credentials","body","JSON","stringify","putData","deleteData","MeetingAPI","all","concat","byId","meetingId","create","delete","getCurrentStory","updateCurrentStory","CurrentMeetingId","state","currentMeeting","_id","CurrentStory","currentStory","CurrentUserId","user","LocationState","router","StoriesAPI","URL","params","search","URLSearchParams","post","storyId","getStoryEstimates","updateStoryEstimate","watchStoryEstimateAsync","putStoryEstimateAsync","resetStoryEstimateAsync","STORY_ESTIMATE_REQUESTED","RESET_STORY_ESTIMATE_REQUESTED","STORY_ESTIMATE_SUCCESS","STORY_ESTIMATE_ERROR","regenerator_default","a","wrap","_context","prev","next","takeLatest","stop","_marked","_ref","_ref$payload","userId","estimate","_context2","payload","call","generateBody","put","storyEstimateSuccess","t0","type","_marked2","ResetStoryEstimate","_context3","_marked3","watchCurrentStoryAsync","getCurrentStoryAsync","pollCurrentStoryAsync","CURRENT_STORY_SUCCESS","CURRENT_STORY_ERROR","CURRENT_STORY_GET_REQUESTED","CURRENT_STORY_START_POLLING_REQUESTED","CURRENT_STORY_STOP_POLLING_REQUESTED","POLLING_DELAY","take","sent","race","task","cancel","CurrentStoryActions_marked","GetCurrentStory","story","CurrentStorySuccess","CurrentStoryError","CurrentStoryActions_marked2","_ref2","_story","select","delay","CurrentStoryActions_marked3","watchCurrentMeetingAsync","getCurrentMeetingAsync","updateCurrentStoryAsync","CURRENT_MEETING_SUCCESS","CURRENT_MEETING_ERROR","CURRENT_MEETING_GET_REQUESTED","UPDATE_CURRENT_STORY_REQUESTED","CurrentMeetingActions_marked","GetCurrentMeeting","currentMeetingId","meeting","CurrentMeetingError","CurrentMeetingActions_marked2","_ref2$payload","GenerateBody","CurrentMeetingActions_marked3","routerActions","watchRouterAsync","viewCreateMeeting","push","viewCreateStory","viewMeeting","viewStory","viewStories","refreshStories","replace","viewMeetings","refreshMeetings","action","currentUserId","pathname","nextPathname","startsWith","endsWith","split","route_actions_marked","LOCATION_CHANGE","route_actions_marked2","watchMeetingsAsync","pollMeetingsAsync","postMeetingAsync","deleteMeetingAsync","MEETINGS_SUCCESS","MEETINGS_ERROR","MEETING_POST_REQUESTED","MEETING_DELETE_REQUESTED","MEETINGS_START_POLLING_REQUESTED","MEETINGS_STOP_POLLING_REQUESTED","MeetingsActions_marked","meetings","MeetingsSuccess","MeetingsError","MeetingsActions_marked2","meetingName","MeetingsActions_marked3","_context4","_marked4","name","BackButton","goBack","react_default","createElement","data-uk-icon","className","onClick","Fragment","Page","title","onBack","children","connect","dispatch","startPollingMeetings","stopPollingMeetings","deleteMeeting","DeleteMeeting","goToMeeting","goToCreateMeeting","_ref$meetings","useEffect","map","index","key","data-uk-grid","uk-tooltip","event","stopPropagation","watchStoriesAsync","getStoriesAsync","postStoryAsync","deleteStoryAsync","STORIES_SUCCESS","STORIES_ERROR","STORIES_GET_REQUESTED","STORIES_POST_REQUESTED","STORY_DELETE_REQUESTED","StoriesActions_marked","stories","StoriesSuccess","StoriesError","StoriesActions_marked2","StoriesActions_marked3","_ref3","_currentMeetingId","StoriesActions_marked4","goToMeetings","goToStory","deleteStory","DeleteStory","createStory","goToEstimate","getStories","GetStories","_ref$stories","estimate_avg","storyEstimate","goToStories","PutStoryEstimate","resetStoryEstimate","startPollingCurrentStory","StartPollingCurrentStory","stopPollingCurrentStory","i","disabled","hidden","postMeeting","PostMeeting","onSubmit","preventDefault","target","meetingInputName","value","trim","placeholder","UserAPI","watchUserAsync","getUserAsync","postUserAsync","USER_GET_REQUESTED","USER_POST_REQUESTED","USER_SUCCESS","USER_ERROR","UserActions_marked","UserSuccess","UserError","UserActions_marked2","username","_user","locationState","UserActions_marked3","postUser","PostUser","src","loginImg","alt","userInputName","PostNewUser","postStory","storyName","PostStory","storyInputName","watchStoryEstimatesAsync","pollStoryEstimatesAsync","STORY_ESTIMATES_SUCCESS","STORY_ESTIMATES_ERROR","STORY_ESTIMATES_START_POLLING_REQUESTED","STORY_ESTIMATES_STOP_POLLING_REQUESTED","StoryEstimatesActions_marked","storyEstimates","StoryEstimatesActions_marked2","UpdateCurrentStory","startPollingStoryEstimates","StartPollingStoryEstimates","stopPollingStoryEstimates","sum","b","hasValidEstimate","filter","numbers","estimates","Math","ceil","reduce","toString","showAverage","initialState","UserReducer","storyEstimateReducer","MeetingsReducer","StoriesReducer","errorActions","errorReducer","some","uikit","notification","message","timeout","current_story","CurrentMeetingReducer","CurrentStoryReducer","StoryEstimatesReducer","RootReducer","history","combineReducers","connectRouter","rootSaga","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createHashHistory","store_marked","storeConfig","store","createStore","createRootReducer","applyMiddleware","routerMiddleware","run","ReactDOM","render","es","esm","react_router","exact","path","component","CreateUser","Meetings","CreateMeeting","StoryEstimate","Stories","CreateStory","StorySummary","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kJCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,6IClBAC,EAAuB,CAC3BC,QAAS,CACPC,eAAgB,mBAChBC,KAAQ,SAICC,EAAUC,6DAAYC,kBAAoBD,6DAAYC,kBAAoB,4CAE1EC,EAAU,SAACC,GACtB,OAAOC,MAAMD,EAAKR,GACjBU,KAAK,SAAAC,GACJ,IAAIA,EAASC,GACT,MAAMC,MAAM,eAAiBF,EAASG,QAE1C,OAAOH,EAASI,SAEjBC,MAAM,SAAAC,GACJ,MAAMA,GAAgBJ,MAAM,4BAA8BL,MAIlDU,EAAW,WAAyB,IAAxBV,EAAwBW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAIG,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACxC,OAAOV,MAAMD,EAAK,CACde,OAAQ,OACRpB,KAAM,OACNqB,MAAO,WACPC,YAAa,cACbxB,QAAS,CACLC,eAAgB,oBAEpBwB,KAAMC,KAAKC,UAAUN,KAExBZ,KAAK,SAAAC,GACJ,IAAIA,EAASC,GACT,MAAMC,MAAM,eAAiBF,EAASG,QAE1C,OAAOH,EAASI,SAEjBC,MAAM,SAAAC,GACJ,MAAMA,GAAgBJ,MAAM,2BAA6BL,MAIjDqB,EAAU,WAAyB,IAAxBrB,EAAwBW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAIG,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrC,OAAOV,MAAMD,EAAK,CACde,OAAQ,MACRpB,KAAM,OACNqB,MAAO,WACPC,YAAa,cACbxB,QAAS,CACLC,eAAgB,oBAEpBwB,KAAMC,KAAKC,UAAUN,KAEpBZ,KAAK,SAAAC,GACF,IAAIA,EAASC,GACT,MAAMC,MAAM,eAAiBF,EAASG,QAE1C,OAAOH,EAASI,SAEnBC,MAAM,SAAAC,GACH,MAAMA,GAAgBJ,MAAM,2BAA6BL,MAIxDsB,EAAa,SAACtB,GACzB,OAAOC,MAAMD,EAAK,CAChBe,OAAQ,SACRpB,KAAM,OACNqB,MAAO,WACPC,YAAa,gBAEdf,KAAK,SAAAC,GACJ,IAAIA,EAASC,GACT,MAAMC,MAAM,eAAiBF,EAASG,QAE1C,OAAOH,EAASI,SAEjBC,MAAM,SAAAC,GACL,MAAMA,GAAgBJ,MAAM,+BAAiCL,MC9EpDuB,EAAa,CACxBC,IAAK,kBAAMzB,EAAO,GAAA0B,OAAI7B,EAAJ,eAClB8B,KAAM,SAAAC,GAAS,OAAI5B,EAAO,GAAA0B,OAAI7B,EAAJ,cAAA6B,OAAwBE,KAClDC,OAAQ,SAACV,GAAD,OAAUR,EAAQ,GAAAe,OAAI7B,EAAJ,aAAwBsB,IAClDW,OAAQ,SAAAF,GAAS,OAAIL,EAAU,GAAAG,OAAI7B,EAAJ,cAAA6B,OAAwBE,KACvDG,gBAAiB,SAAAH,GAAS,OAAI5B,EAAO,GAAA0B,OAAI7B,EAAJ,cAAA6B,OAAwBE,EAAxB,mBACrCI,mBAAoB,SAACJ,EAAWT,GAAZ,OAAqBG,EAAO,GAAAI,OAAI7B,EAAJ,cAAA6B,OAAwBE,EAAxB,iBAAkDT,KCRvFc,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,eAAeC,KACjDC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,cAC9BC,EAAgB,SAAAL,GAAK,OAAIA,EAAMM,KAAKJ,KACpCK,EAAgB,SAAAP,GAAK,OAAIA,EAAMQ,OAAOpD,SAAS4C,OCD/CS,EAAa,CACtBlB,IAAK,SAACG,GACF,IAAI3B,EAAM,IAAI2C,IAAJ,GAAAlB,OAAW7B,EAAX,aACNgD,EAAS,CAACjB,UAAWA,GAEzB,OADA3B,EAAI6C,OAAS,IAAIC,gBAAgBF,GAC1B7C,EAAQC,IAEnB+C,KAAM,SAACpB,EAAWT,GACd,IAAIlB,EAAM,IAAI2C,IAAJ,GAAAlB,OAAW7B,EAAX,aACNgD,EAAS,CAACjB,UAAWA,GAEzB,OADA3B,EAAI6C,OAAS,IAAIC,gBAAgBF,GAC1BlC,EAASV,EAAKkB,IAEzBW,OAAQ,SAAAmB,GAAO,OAAI1B,EAAU,GAAAG,OAAI7B,EAAJ,aAAA6B,OAAuBuB,KACpDC,kBAAmB,SAAAD,GAAO,OAAIjD,EAAO,GAAA0B,OAAI7B,EAAJ,aAAA6B,OAAuBuB,EAAvB,gBACrCE,oBAAqB,SAACF,EAAS9B,GAAV,OAAmBG,EAAO,GAAAI,OAAI7B,EAAJ,aAAA6B,OAAuBuB,EAAvB,cAA4C9B,gBCR9EiC,cAYAC,cAgBAC,GAlCJC,EAA2B,2BAC3BC,EAAiC,iCACjCC,EAAyB,yBACzBC,EAAuB,uBAG7B,SAAUN,IAAV,OAAAO,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGC,YAAWV,EAA0BF,GADxC,OAEH,OAFGS,EAAAE,KAAA,EAEGC,YAAWT,EAAgCF,GAF9C,wBAAAQ,EAAAI,SAAAC,GAYA,SAAUd,EAAVe,GAAA,IAAAC,EAAAC,EAAArB,EAAAsB,EAAA,OAAAZ,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAEC,OAFDK,EAAAD,EAAiCK,QAAWH,EAA5CD,EAA4CC,OAAQrB,EAApDoB,EAAoDpB,QAASsB,EAA7DF,EAA6DE,SAA7DC,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAEOU,YAAK/B,EAAWQ,oBAAqBF,EAAS0B,EAAaL,EAAQC,IAF1E,OAGC,OAHDC,EAAAR,KAAA,EAGOY,YAAIC,EAAqBN,IAHhC,OAAAC,EAAAR,KAAA,gBAMC,OANDQ,EAAAT,KAAA,EAAAS,EAAAM,GAAAN,EAAA,SAAAA,EAAAR,KAAA,GAMOY,aA4BclE,EA5BQ8D,EAAAM,GA6BzB,CACHC,KAAMrB,EACNe,QAAS,CAAC/D,YArCX,yBAAA8D,EAAAN,OAkCP,IAA4BxD,GAlCrBsE,EAAA,cAUA,SAASC,IACZ,MAAO,CACHF,KAAMvB,GAIP,SAAUF,IAAV,OAAAK,EAAAC,EAAAC,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACH,OADGkB,EAAAlB,KAAA,EACGY,YAAIC,EAAqB,IAD5B,wBAAAK,EAAAhB,SAAAiB,GAIP,SAASR,EAAaL,EAAQC,GAC1B,MAAQ,CACJ/B,KAAM8B,EACNC,SAAUA,GAIlB,SAASM,EAAqBN,GAC1B,MAAO,CACHQ,KAAMtB,EACNgB,QAAS,CAACF,4BCrCDa,cAkBAC,cAuBAC,GAlDJC,EAAwB,wBACxBC,EAAsB,sBACtBC,EAA6B,8BAC7BC,EAAwC,wCACxCC,EAAuC,uCAGvCC,EAAgB,IAEtB,SAAUR,IAAV,IAAAX,EAAA,OAAAd,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGC,YAAWwB,EAA6BJ,GAD3C,OAGe,OAHfvB,EAAAE,KAAA,EAGqB6B,YAAKH,GAH1B,OAIC,OADIjB,EAHLX,EAAAgC,KAAAhC,EAAAE,KAAA,EAIO+B,YAAK,CACPC,KAAMtB,YAAKY,EAAuBb,GAClCwB,OAAQJ,YAAKF,KANlB,OAAA7B,EAAAE,KAAA,iCAAAF,EAAAI,SAAAgC,GAWA,SAASC,EAAgBvE,GAC5B,MAAO,CACHmD,KAAMU,EACNhB,QAAS7C,GAIV,SAAUyD,EAAVjB,GAAA,IAAAxC,EAAAwE,EAAA,OAAAzC,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAEe,OAF0BpC,EAAzCwC,EAAgCK,QAAhCD,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAEqBU,YAAKlD,EAAWO,gBAAiBH,GAFtD,OAGC,OADMwE,EAFP5B,EAAAsB,KAAAtB,EAAAR,KAAA,EAGOY,YAAIyB,EAAoBD,IAH/B,OAAA5B,EAAAR,KAAA,gBAMC,OANDQ,EAAAT,KAAA,EAAAS,EAAAM,GAAAN,EAAA,SAAAA,EAAAR,KAAA,GAMOY,YAAI0B,EAAiB9B,EAAAM,KAN5B,yBAAAN,EAAAN,SAAAqC,EAAA,cAuBA,SAAUjB,EAAVkB,GAAA,IAAA5E,EAAAU,EAAAmE,EAAA,OAAA9C,EAAAC,EAAAC,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAA0CpC,EAA1C4E,EAAiC/B,QAAjC,OAG0B,OAH1BS,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAGgC0C,YAAOrE,GAHvC,OAImB,OADRC,EAHX4C,EAAAY,KAAAZ,EAAAlB,KAAA,EAIyBU,YAAKlD,EAAWO,gBAAiBH,GAJ1D,YAIWwE,EAJXlB,EAAAY,MAAA,CAAAZ,EAAAlB,KAAA,SAMkB,OANlBkB,EAAAlB,KAAA,GAMwB1B,EAAaF,MAAQgE,EAAMhE,IAAMwC,YAAIK,KAAwB,GANrF,QAAAC,EAAAlB,KAAA,iBAOkB,OAPlBkB,EAAAlB,KAAA,GAO6C,OAArB1B,EAAaF,IAAoBwC,YAAIK,KAAwB,GAPrF,QASK,OATLC,EAAAlB,KAAA,GASWY,YAAIyB,EAAoBD,IATnC,QAAAlB,EAAAlB,KAAA,iBAYK,OAZLkB,EAAAnB,KAAA,GAAAmB,EAAAJ,GAAAI,EAAA,SAAAA,EAAAlB,KAAA,GAYWY,YAAI0B,EAAiBpB,EAAAJ,KAZhC,QAcC,OAdDI,EAAAlB,KAAA,GAcO2C,YAAMf,GAdb,QAAAV,EAAAlB,KAAA,iCAAAkB,EAAAhB,SAAA0C,EAAA,eAkBA,SAASP,EAAoB/D,GAChC,MAAO,CACHyC,KAAMQ,EACNd,QAAS,CAACnC,iBAIX,SAASgE,EAAkB5F,GAC9B,MAAO,CACHqE,KAAMS,EACNf,QAAS,CAAC/D,yBCzEDmG,gBAYAC,gBAoBAC,IArCJC,GAA0B,0BAC1BC,GAAwB,wBACxBC,GAAgC,gCAChCC,GAAiC,iCAEvC,SAAUN,KAAV,OAAAlD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGC,YAAWiD,GAA+BJ,IAD7C,OAEH,OAFGhD,EAAAE,KAAA,EAEGC,YAAWkD,GAAgCJ,IAF9C,wBAAAjD,EAAAI,SAAAkD,GAKA,SAASC,GAAkBzF,GAC9B,MAAO,CACHmD,KAAMmC,GACNzC,QAAS7C,GAIV,SAAUkF,GAAV1C,GAAA,IAAAxC,EAAA0F,EAAAC,EAAA,OAAA5D,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAEwB,OAFmBpC,EAA3CwC,EAAkCK,QAAlCD,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAE8B0C,YAAOzE,GAFrC,UAG0B,QADrBqF,EAFL9C,EAAAsB,OAGkCwB,IAAqB1F,EAHvD,CAAA4C,EAAAR,KAAA,SAIqB,OAJrBQ,EAAAR,KAAA,EAI2BU,YAAKlD,EAAWG,KAAMC,GAJjD,OAKK,OADM2F,EAJX/C,EAAAsB,KAAAtB,EAAAR,KAAA,GAKWY,YA0BP,CACHG,KAAMiC,GACNvC,QAAS,CAACtC,eA5B0BoF,KALrC,QAAA/C,EAAAR,KAAA,iBASC,OATDQ,EAAAT,KAAA,GAAAS,EAAAM,GAAAN,EAAA,SAAAA,EAAAR,KAAA,GASOY,YAAI4C,GAAmBhD,EAAAM,KAT9B,yBAAAN,EAAAN,SAAAuD,GAAA,eAoBA,SAAUV,GAAVP,GAAA,IAAAkB,EAAA9F,EAAAqB,EAAA,OAAAU,EAAAC,EAAAC,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAEC,OAFD0D,EAAAlB,EAAmC/B,QAAU7C,EAA7C8F,EAA6C9F,UAAWqB,EAAxDyE,EAAwDzE,QAAxDiC,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEOU,YAAKlD,EAAWQ,mBAAoBJ,EAAW+F,GAAa1E,IAFnE,OAGC,OAHDiC,EAAAlB,KAAA,EAGOY,YAAIuB,EAAgBvE,IAH3B,OAAAsD,EAAAlB,KAAA,gBAMC,OANDkB,EAAAnB,KAAA,EAAAmB,EAAAJ,GAAAI,EAAA,SAAAA,EAAAlB,KAAA,GAMOY,YAAI4C,GAAmBtC,EAAAJ,KAN9B,yBAAAI,EAAAhB,SAAA0D,GAAA,cAiBA,SAASJ,GAAoB9G,GAChC,MAAO,CACHqE,KAAMkC,GACNxC,QAAS,CAAC/D,UAIlB,SAASiH,GAAa1E,GAClB,MAAO,CACHA,QAASA,mBCtDA4E,gBAsBAC,IA/BJC,GAAoB,kBAAMC,YAAK,qBAC/BC,GAAkB,kBAAMD,YAAK,mBAC7BE,GAAc,SAACtG,GAAD,OAAeoG,YAAI,YAAAtG,OAAcE,EAAd,gBACjCuG,GAAY,SAACvG,EAAWqB,GAAZ,OAAwB+E,YAAI,YAAAtG,OAAcE,EAAd,WAAAF,OAAmCuB,EAAnC,eACxCmF,GAAc,SAACxG,GAAD,OAAeoG,YAAI,YAAAtG,OAAcE,EAAd,eACjCyG,GAAiB,SAACzG,GAAD,OAAe0G,YAAO,YAAA5G,OAAcE,EAAd,eACvC2G,GAAe,kBAAMP,YAAK,eAC1BQ,GAAkB,kBAAMF,YAAQ,eAEtC,SAAUT,GAAcY,GAAxB,IAAAC,EAAAC,EAAA/G,EAAA,OAAA+B,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACmB,OADnBF,EAAAE,KAAA,EACyB0C,YAAOnE,GADhC,UACGmG,EADH5E,EAAAgC,KAEG6C,EAAWF,EAAOhE,QAAQnF,SAASqJ,SACnB,OAAlBD,GAAuC,MAAbC,EAH3B,CAAA7E,EAAAE,KAAA,QAIC,OAJDF,EAAAE,KAAA,EAIO2C,YAAM,GAJb,OAKC,OALD7C,EAAAE,KAAA,EAKOY,YAAI0D,YAAQ,CAACK,SAAU,IAAKzG,MAAO,CAAC0G,aAAgBD,MAL3D,WAQCA,EAASE,WAAW,cAAiBF,EAASG,SAAS,WARxD,CAAAhF,EAAAE,KAAA,SAUC,OADMpC,EAAY+G,EAASI,MAAM,KAAK,GATvCjF,EAAAE,KAAA,GAUOY,YAAIyC,GAAkBzF,IAV7B,YAaC+G,EAASE,WAAW,kBAbrB,CAAA/E,EAAAE,KAAA,SAc0B,OAd1BF,EAAAE,KAAA,GAcgC0C,YAAOzE,GAdvC,WAAA6B,EAAAgC,KAAA,CAAAhC,EAAAE,KAAA,SAgBK,OAhBLF,EAAAE,KAAA,GAgBW2C,YAAM,GAhBjB,QAiBK,OAjBL7C,EAAAE,KAAA,GAiBWY,YAAI4D,MAjBf,yBAAA1E,EAAAI,SAAA8E,IAsBA,SAAUlB,KAAV,OAAAnE,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OACH,OADGQ,EAAAR,KAAA,EACGC,YAAWgF,IAAiBpB,IAD/B,wBAAArD,EAAAN,SAAAgF,oBCvBUC,gBAkBAC,gBAyBAC,gBAiBAC,IArEJC,GAAmB,mBACnBC,GAAiB,iBACjBC,GAAyB,yBACzBC,GAA2B,2BAC3BC,GAAmC,mCACnCC,GAAkC,kCAElChE,GAAgB,IAEtB,SAAUuD,KAAV,IAAA1E,EAAA,OAAAd,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGC,YAAWwF,GAAwBJ,IADtC,OAEH,OAFGvF,EAAAE,KAAA,EAEGC,YAAWyF,GAA0BJ,IAFxC,OAIe,OAJfxF,EAAAE,KAAA,EAIqB6B,YAAK8D,IAJ1B,OAKC,OADIlF,EAJLX,EAAAgC,KAAAhC,EAAAE,KAAA,GAKO+B,YAAK,CACPC,KAAMtB,YAAK0E,GAAmB3E,GAC9BwB,OAAQJ,YAAK+D,MAPlB,QAAA9F,EAAAE,KAAA,iCAAAF,EAAAI,SAAA2F,IAkBA,SAAUT,KAAV,IAAAU,EAAA,OAAAnG,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAGsB,OAHtBQ,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAG4BU,YAAKlD,EAAWC,KAH5C,OAIK,OADMqI,EAHXtF,EAAAsB,KAAAtB,EAAAR,KAAA,EAIWY,YAAImF,GAAgBD,IAJ/B,OAAAtF,EAAAR,KAAA,gBAMK,OANLQ,EAAAT,KAAA,EAAAS,EAAAM,GAAAN,EAAA,SAAAA,EAAAR,KAAA,GAMWY,YAAIoF,GAAaxF,EAAAM,KAN5B,QAQC,OARDN,EAAAR,KAAA,GAQO2C,YAAMf,IARb,QAAApB,EAAAR,KAAA,iCAAAQ,EAAAN,SAAA+F,GAAA,cAyBA,SAAUZ,GAAVjF,GAAA,IAAA8F,EAAA,OAAAvG,EAAAC,EAAAC,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAEC,OAFoCkG,EAArC9F,EAA4BK,QAA5BS,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEOU,YAAKlD,EAAWK,OAAQ8F,GAAauC,IAF5C,OAGC,OAHDhF,EAAAlB,KAAA,EAGOY,YAAI2D,MAHX,OAAArD,EAAAlB,KAAA,gBAMC,OANDkB,EAAAnB,KAAA,EAAAmB,EAAAJ,GAAAI,EAAA,SAAAA,EAAAlB,KAAA,GAMOY,YAAIoF,GAAa9E,EAAAJ,KANxB,yBAAAI,EAAAhB,SAAAiG,GAAA,cAiBA,SAAUb,GAAV9C,GAAA,IAAA5E,EAAA,OAAA+B,EAAAC,EAAAC,KAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,OAEC,OAFsCpC,EAAvC4E,EAA8B/B,QAA9B2F,EAAArG,KAAA,EAAAqG,EAAApG,KAAA,EAEOU,YAAKlD,EAAWM,OAAQF,GAF/B,OAGC,OAHDwI,EAAApG,KAAA,EAGOY,YAAI4D,MAHX,OAAA4B,EAAApG,KAAA,gBAMC,OANDoG,EAAArG,KAAA,EAAAqG,EAAAtF,GAAAsF,EAAA,SAAAA,EAAApG,KAAA,GAMOY,YAAIoF,GAAaI,EAAAtF,KANxB,yBAAAsF,EAAAlG,SAAAmG,GAAA,cAUA,SAASN,GAAgBD,GAC5B,MAAO,CACH/E,KAAMwE,GACN9E,QAAS,CAACqF,aAIX,SAASE,GAActJ,GAC1B,MAAO,CACHqE,KAAMyE,GACN/E,QAAS,CAAC/D,UAIlB,SAASiH,GAAauC,GAClB,MAAO,CACHI,KAAMJ,GCjGd,SAASK,GAATnG,GAA8B,IAAToG,EAASpG,EAAToG,OACjB,OAAOA,EACFC,EAAA7G,EAAA8G,cAAA,QAAMC,eAAa,gCAAgCC,UAAU,qGACvDC,QAASL,IACfC,EAAA7G,EAAA8G,cAAAD,EAAA7G,EAAAkH,SAAA,MAGF,SAASC,GAATvE,GAAyC,IAA1BwE,EAA0BxE,EAA1BwE,MAAOC,EAAmBzE,EAAnByE,OAAQC,EAAW1E,EAAX0E,SACjC,OACIT,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,sBACXH,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,iCACXH,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,gCAA+BH,EAAA7G,EAAA8G,cAACH,GAAD,CAAYC,OAAQS,KAClER,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,oCAAoCI,GAClDP,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,kCACVM,KCwDNC,mBAjBf,SAAyBjJ,GACrB,MAAO,CACH4H,SAAU5H,EAAM4H,SAChBpJ,MAAOwB,EAAMxB,QAIrB,SAA4B0K,GACxB,MAAO,CACHC,qBAAsB,kBAAMD,EFtCzB,CACHrG,KAAM4E,MEsCN2B,oBAAqB,kBAAMF,EFrBxB,CACHrG,KAAM6E,MEqBN2B,cAAe,SAAC3J,GAAD,OAAewJ,EFA/B,SAAuBxJ,GAC1B,MAAO,CACHmD,KAAM2E,GACNjF,QAAS7C,GEH8B4J,CAAc5J,KACrD6J,YAAa,SAAC7J,GAAD,OAAewJ,EAASlD,GAAYtG,KACjD8J,kBAAmB,kBAAMN,EAASrD,SAI3BoD,CAlER,SAAA/G,GAA6H,IAAAuH,EAAAvH,EAA1G0F,gBAA0G,IAAA6B,EAA/F,GAA+FA,EAA3FN,EAA2FjH,EAA3FiH,qBAAsBC,EAAqElH,EAArEkH,oBAAqBC,EAAgDnH,EAAhDmH,cAAeE,EAAiCrH,EAAjCqH,YAAaC,EAAoBtH,EAApBsH,kBAW5G,OAVAE,oBACI,WAEI,OADAP,IACO,WACHC,MAGR,CAACD,EAAsBC,IAIvBb,EAAA7G,EAAA8G,cAACK,GAAD,CAAMC,MAAM,YACPlB,EAAS+B,IAAI,SAACtE,EAASuE,GAAV,OACVrB,EAAA7G,EAAA8G,cAAA,OAAKqB,IAAKD,EAAOlB,UAAU,qDACtBC,QAAS,kBAAMY,EAAYlE,EAAQnF,OACpCqI,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,yBAAyBoB,gBAAA,GACpCvB,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,gBACXH,EAAA7G,EAAA8G,cAAA,QAAME,UAAU,IAAIrD,EAAQ+C,OAEhCG,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,6DACXH,EAAA7G,EAAA8G,cAAA,UACIE,UAAU,iBACVD,eAAa,cACbsB,aAAW,wBACXpB,QAAS,SAAAqB,GACLA,EAAMC,kBACNZ,EAAchE,EAAQnF,aAQ9CqI,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,0CACXH,EAAA7G,EAAA8G,cAAA,UACIE,UAAU,iBACVD,eAAa,aACbsB,aAAW,qBACXpB,QAASa,oBCnCZU,gBAaAC,gBAkBAC,gBAkBAC,IAvDJC,GAAkB,kBAClBC,GAAgB,gBAChBC,GAAwB,wBACxBC,GAAyB,yBACzBC,GAAyB,yBAE/B,SAAUR,KAAV,OAAAzI,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGC,YAAWyI,GAAuBL,IADrC,OAEH,OAFGvI,EAAAE,KAAA,EAEGC,YAAW0I,GAAwBL,IAFtC,OAGH,OAHGxI,EAAAE,KAAA,EAGGC,YAAW2I,GAAwBL,IAHtC,wBAAAzI,EAAAI,SAAA2I,IAaA,SAAUR,GAAVjI,GAAA,IAAAxC,EAAAkL,EAAA,OAAAnJ,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAEiB,OAFmBpC,EAApCwC,EAA2BK,QAA3BD,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAEuBU,YAAK/B,EAAWlB,IAAKG,GAF5C,OAGC,OADMkL,EAFPtI,EAAAsB,KAAAtB,EAAAR,KAAA,EAGOY,YAAImI,GAAeD,IAH1B,OAAAtI,EAAAR,KAAA,gBAKC,OALDQ,EAAAT,KAAA,EAAAS,EAAAM,GAAAN,EAAA,SAAAA,EAAAR,KAAA,GAKOY,YAAIoI,GAAYxI,EAAAM,KALvB,yBAAAN,EAAAN,SAAA+I,GAAA,cAkBA,SAAUX,GAAV9F,GAAA,IAAA/B,EAAA6C,EAAA,OAAA3D,EAAAC,EAAAC,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAE0B,OAFAS,EAA1B+B,EAA0B/B,QAA1BS,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEgC0C,YAAOzE,GAFvC,OAGC,OADMqF,EAFPpC,EAAAY,KAAAZ,EAAAlB,KAAA,EAGOU,YAAK/B,EAAWK,KAAMsE,EAAkB7C,GAH/C,OAIC,OAJDS,EAAAlB,KAAA,EAIOY,YAAIwD,GAAYd,IAJvB,OAAApC,EAAAlB,KAAA,iBAOC,OAPDkB,EAAAnB,KAAA,GAAAmB,EAAAJ,GAAAI,EAAA,SAAAA,EAAAlB,KAAA,GAOOY,YAAIoI,GAAY9H,EAAAJ,KAPvB,yBAAAI,EAAAhB,SAAAgJ,GAAA,eAkBA,SAAUX,GAAVY,GAAA,IAAAlK,EAAAmK,EAAA,OAAAzJ,EAAAC,EAAAC,KAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,OAE0B,OAFWf,EAArCkK,EAA4B1I,QAA5B2F,EAAArG,KAAA,EAAAqG,EAAApG,KAAA,EAEgC0C,YAAOzE,GAFvC,OAGC,OADMqF,EAFP8C,EAAAtE,KAAAsE,EAAApG,KAAA,EAGOU,YAAK/B,EAAWb,OAAQmB,GAH/B,OAIC,OAJDmH,EAAApG,KAAA,EAIOY,YAAIyD,GAAef,IAJ1B,OAAA8C,EAAApG,KAAA,iBAOC,OAPDoG,EAAArG,KAAA,GAAAqG,EAAAtF,GAAAsF,EAAA,SAAAA,EAAApG,KAAA,GAOOY,YAAIoI,GAAY5C,EAAAtF,KAPvB,yBAAAsF,EAAAlG,SAAAmJ,GAAA,eAWA,SAASN,GAAeD,GAC3B,MAAO,CACH/H,KAAMyH,GACN/H,QAAS,CAACqI,QAASA,IAIpB,SAASE,GAAatM,GACzB,MAAO,CACHqE,KAAM0H,GACNhI,QAAS,CAAC/D,UCAHyK,mBAnBf,SAAyBjJ,GACrB,MAAO,CACHC,eAAgBD,EAAMC,eACtB2K,QAAS5K,EAAM4K,QACfpM,MAAOwB,EAAMxB,QAIrB,SAA4B0K,GACxB,MAAO,CACHkC,aAAc,kBAAMlC,EAAS7C,OAC7BgF,UAAW,SAAC3L,EAAWqB,GAAZ,OAAwBmI,EAASjD,GAAUvG,EAAWqB,KACjEuK,YAAa,SAACvK,GAAD,OAAamI,EDrB3B,SAAqBnI,GACxB,MAAO,CACH8B,KAAM6H,GACNnI,QAASxB,GCkB0BwK,CAAYxK,KAC/CyK,YAAa,kBAAMtC,EAASnD,OAC5B0F,aAAc,SAAC/L,GAAD,OAAewJ,EAASlD,GAAYtG,KAClDgM,WAAY,SAAChM,GAAD,OAAewJ,ED5D5B,SAAoBxJ,GACvB,MAAO,CACHmD,KAAM2H,GACNjI,QAAS7C,GCyD2BiM,CAAWjM,OAIxCuJ,CA3ER,SAAA/G,GAAqI,IAAnHjC,EAAmHiC,EAAnHjC,eAAmH2L,EAAA1J,EAAnG0I,eAAmG,IAAAgB,EAAzF,GAAyFA,EAArFR,EAAqFlJ,EAArFkJ,aAAcC,EAAuEnJ,EAAvEmJ,UAAWC,EAA4DpJ,EAA5DoJ,YAAaE,EAA+CtJ,EAA/CsJ,YAAaC,EAAkCvJ,EAAlCuJ,aAAcC,EAAoBxJ,EAApBwJ,WAAYpO,EAAQ4E,EAAR5E,MAShI,OAPAoM,oBACI,WACIgC,EAAWpO,EAAMqD,OAAOjB,YAE5B,CAACgM,EAAYpO,IAIbiL,EAAA7G,EAAA8G,cAACK,GAAD,CAAMC,MAAO7I,EAAemI,KAAMW,OAAQqC,GACtC7C,EAAA7G,EAAA8G,cAAA,UAAQE,UAAU,wFACVC,QAAS,kBAAM8C,EAAaxL,EAAeC,OADnD,YAKC0K,EAAQjB,IAAI,SAACzF,EAAO0F,GAAR,OACTrB,EAAA7G,EAAA8G,cAAA,OAAKqB,IAAKD,EAAOlB,UAAU,sEACtBC,QAAS,kBAAM0C,EAAUpL,EAAeC,IAAKgE,EAAMhE,OACpDqI,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,yBAAyBoB,gBAAA,GACpCvB,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,qCACXH,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,0BACXH,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,gBAAgBxE,EAAMkE,MACrCG,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,+FACVxE,EAAM2H,aAAe,WAAa3H,EAAM2H,aAAe,mBAIpEtD,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,4EACXH,EAAA7G,EAAA8G,cAAA,UACIE,UAAU,iBACVD,eAAa,cACbsB,aAAW,sBACXpB,QAAS,SAAAqB,GACLA,EAAMC,kBACNqB,EAAYpH,EAAMhE,aAQ1CqI,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,0CACXH,EAAA7G,EAAA8G,cAAA,UACIE,UAAU,iBACVD,eAAa,aACbsB,aAAW,mBACXpB,QAAS6C,QCYdvC,mBApBf,SAAyBjJ,GACrB,MAAO,CACH8L,cAAe9L,EAAM8L,cACrB7L,eAAgBD,EAAMC,eACtBK,KAAMN,EAAMM,KACZF,aAAcJ,EAAMI,eAI5B,SAA4B8I,GACxB,MAAO,CACHkC,aAAc,kBAAMlC,EAAS7C,OAC7B0F,YAAa,SAACrM,GAAD,OAAewJ,EAAShD,GAAYxG,KACjDuB,oBAAqB,SAACmB,EAAQrB,EAASsB,GAAlB,OAA+B6G,ET7CrD,SAA0B9G,EAAQrB,EAASsB,GAC9C,MAAO,CACHQ,KAAMxB,EACNkB,QAAS,CAAEH,SAAQrB,UAASsB,aS0CiC2J,CAAiB5J,EAAQrB,EAASsB,KAC/F4J,mBAAoB,kBAAM/C,EAASnG,MACnCmJ,yBAA0B,SAACxM,GAAD,OAAewJ,ERnB1C,SAAkCxJ,GACrC,MAAO,CACHmD,KAAMW,EACNjB,QAAS7C,GQgByCyM,CAAyBzM,KAC3E0M,wBAAyB,kBAAMlD,ERZ5B,CACHrG,KAAMY,OQeCwF,CA3DR,SAAA/G,GAA0M,IAAlL4J,EAAkL5J,EAAlL4J,cAAe7L,EAAmKiC,EAAnKjC,eAAgBK,EAAmJ4B,EAAnJ5B,KAAMF,EAA6I8B,EAA7I9B,aAAcgL,EAA+HlJ,EAA/HkJ,aAAcW,EAAiH7J,EAAjH6J,YAAa9K,EAAoGiB,EAApGjB,oBAAqBgL,EAA+E/J,EAA/E+J,mBAAoBC,EAA2DhK,EAA3DgK,yBAA0BE,EAAiClK,EAAjCkK,wBAAyB9O,EAAQ4E,EAAR5E,MAerM,OAXAoM,oBACI,WAEI,OADAwC,EAAyB5O,EAAMqD,OAAOjB,WAC/B,WACH0M,IACAH,MAGR,CAACC,EAA0BE,EAAyBH,EAAoB3O,IAIxEiL,EAAA7G,EAAA8G,cAACK,GAAD,CAAMC,MAAO7I,EAAemI,KAAMW,OAAQqC,GACtC7C,EAAA7G,EAAA8G,cAAA,UAAQE,UAAU,wFACVC,QAAS,kBAAMoD,EAAY9L,EAAeC,OADlD,QAGAqI,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,uBACVH,EAAA7G,EAAA8G,cAAA,eAAOpI,EAAagI,KAApB,OAEJG,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,kCArBJ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAsBXiB,IAAI,SAACtH,EAAUgK,GAAX,OACZ9D,EAAA7G,EAAA8G,cAAA,UAAQqB,IAAKwC,EAAG1D,QAAS,kBAAM1H,EAAoBX,EAAKJ,IAAKE,EAAaF,IAAKmC,IACvEqG,UAAS,0EAAAlJ,OAA6EsM,IAAkBzJ,EAAW,WAAa,IAChIiK,SAA+B,OAArBlM,EAAaF,KAC1BmC,EACDkG,EAAA7G,EAAA8G,cAAA,QACIE,UAAW,+FACX6D,OAAQT,IAAkBzJ,GAF9B,mBCLT4G,mBAAQ,KAPvB,SAA4BC,GAC1B,MAAO,CACLsD,YAAa,SAACxE,GAAD,OAAiBkB,ENuB3B,SAAqBlB,GACxB,MAAO,CACHnF,KAAM0E,GACNhF,QAASyF,GM1B0ByE,CAAYzE,KACnDoD,aAAc,kBAAMlC,EAAS7C,SAIlB4C,CAzBR,SAAA/G,GAAoD,IAA5BsK,EAA4BtK,EAA5BsK,YAAapB,EAAelJ,EAAfkJ,aAC1C,OACE7C,EAAA7G,EAAA8G,cAACK,GAAD,CAAMC,MAAM,cAAcC,OAAQqC,GAChC7C,EAAA7G,EAAA8G,cAAA,QAAMkE,SAAW,SAAC1C,GAAYA,EAAM2C,iBAAkBH,EAAYxC,EAAM4C,OAAOC,iBAAiBC,MAAMC,UACpGxE,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,aACbH,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,0BACbH,EAAA7G,EAAA8G,cAAA,QAAME,UAAU,eAAeD,eAAa,gBAC5CF,EAAA7G,EAAA8G,cAAA,SAAOJ,KAAK,mBAAmBM,UAAU,WAAWsE,YAAY,OAAOnK,KAAK,UAE9E0F,EAAA7G,EAAA8G,cAAA,UAAQE,UAAU,gEAAlB,mCCbGuE,GAAU,CACrB1N,IAAK,kBAAMzB,EAAO,GAAA0B,OAAI7B,EAAJ,YAClB8B,KAAM,SAAA2C,GAAM,OAAItE,EAAO,GAAA0B,OAAI7B,EAAJ,WAAA6B,OAAqB4C,KAC5CzC,OAAQ,SAACV,GAAD,OAAUR,EAAQ,GAAAe,OAAI7B,EAAJ,UAAqBsB,iBCOhCiO,gBAKAC,gBAgBAC,IA1BJC,GAAqB,qBACrBC,GAAsB,sBACtBC,GAAe,eACfC,GAAa,aAEnB,SAAUN,KAAV,OAAAzL,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGC,YAAWsL,GAAoBF,IADlC,OAEH,OAFGvL,EAAAE,KAAA,EAEGC,YAAWuL,GAAqBF,IAFnC,wBAAAxL,EAAAI,SAAAyL,IAKA,SAAUN,GAAVjL,GAAA,IAAAE,EAAA9B,EAAA,OAAAmB,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAEc,OAFmBM,EAAjCF,EAAwBK,QAAxBD,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAEoBU,YAAKyK,GAAQxN,KAAM2C,GAFvC,OAGC,OADM9B,EAFPgC,EAAAsB,KAAAtB,EAAAR,KAAA,EAGOY,YAAIgL,GAAYpN,IAHvB,OAAAgC,EAAAR,KAAA,gBAKC,OALDQ,EAAAT,KAAA,EAAAS,EAAAM,GAAAN,EAAA,SAAAA,EAAAR,KAAA,GAKOY,YAAIiL,GAASrL,EAAAM,KALpB,yBAAAN,EAAAN,SAAA4L,GAAA,cAgBA,SAAUR,GAAV9I,GAAA,IAAAuJ,EAAAC,EAAAC,EAAA,OAAAtM,EAAAC,EAAAC,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAEc,OAFoB+L,EAAlCvJ,EAAyB/B,QAAzBS,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEoBU,YAAKyK,GAAQtN,OAAQ8F,GAAaoI,IAFtD,OAGC,OADMvN,EAFP0C,EAAAY,KAAAZ,EAAAlB,KAAA,EAGOY,YAAIgL,GAAYpN,IAHvB,OAIuB,OAJvB0C,EAAAlB,KAAA,EAI6B0C,YAAOjE,GAJpC,OAKC,OADMwN,EAJP/K,EAAAY,KAAAZ,EAAAlB,KAAA,QAKyBlD,IAAlBmP,EAA8BrL,YAAIoD,YAAKiI,EAAcrH,eAAiBhE,YAAI2D,MALjF,QAAArD,EAAAlB,KAAA,iBAQC,OARDkB,EAAAnB,KAAA,GAAAmB,EAAAJ,GAAAI,EAAA,SAAAA,EAAAlB,KAAA,GAQOY,YAAIiL,GAAS3K,EAAAJ,KARpB,yBAAAI,EAAAhB,SAAAgM,GAAA,eAYP,SAASvI,GAAaoI,GAClB,MAAQ,CACJzF,KAAMyF,GAId,SAASH,GAAYpN,GACjB,MAAO,CACHuC,KAAM0K,GACNhL,QAAS,CAACjC,SAIlB,SAASqN,GAAUnP,GACf,MAAO,CACHqE,KAAM2K,GACNjL,QAAS,CAAC/D,UCzBlB,IAIeyK,eAAQ,KAJI,SAAAC,GAAQ,MAAK,CACpC+E,SAAU,SAACJ,GAAD,OAAc3E,EDXrB,SAAkB2E,GACrB,MAAO,CACHhL,KAAMyK,GACN/K,QAASsL,GCQoBK,CAASL,OAG/B5E,CAnCR,SAAA/G,GAAgC,IAAX+L,EAAW/L,EAAX+L,SAExB,OACI1F,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,mEACXH,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,iDAAgDH,EAAA7G,EAAA8G,cAAA,wCAC/DD,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,uDAAsDH,EAAA7G,EAAA8G,cAAA,OAAK2F,IAAKC,KAAUC,IAAI,WAC7F9F,EAAA7G,EAAA8G,cAAA,WACID,EAAA7G,EAAA8G,cAAA,QAAMkE,SAAU,SAAA1C,IAiB5B,SAAqBA,EAAOiE,GACxBjE,EAAM2C,iBACNsB,EAASjE,EAAM4C,OAAO0B,cAAcxB,MAAMC,QAlB9BwB,CAAYvE,EAAOiE,KAEnB1F,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,aACXH,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,qEACXH,EAAA7G,EAAA8G,cAAA,QAAME,UAAU,eAAeD,eAAa,eAC5CF,EAAA7G,EAAA8G,cAAA,SAAOJ,KAAK,gBAAgBM,UAAU,WAAWsE,YAAY,OAAOnK,KAAK,UAE7E0F,EAAA7G,EAAA8G,cAAA,UAAQE,UAAU,0FAAlB,wBCiBTO,mBAbf,SAAyBjJ,GACrB,MAAO,CACHC,eAAgBD,EAAMC,iBAI9B,SAA4BiJ,GACxB,MAAO,CACH6C,YAAa,SAACrM,GAAD,OAAewJ,EAAShD,GAAYxG,KACjD8O,UAAW,SAACC,GAAD,OAAevF,EPA3B,SAAmBuF,GACtB,MAAO,CACH5L,KAAM4H,GACNlI,QAAS,CACL6F,KAAMqG,IOJyBC,CAAUD,OAItCxF,CA/BR,SAAA/G,GAA+D,IAAzC6J,EAAyC7J,EAAzC6J,YAAayC,EAA4BtM,EAA5BsM,UAAWvO,EAAiBiC,EAAjBjC,eACjD,OACIsI,EAAA7G,EAAA8G,cAACK,GAAD,CAAMC,MAAM,eAAeC,OAAQ,kBAAMgD,EAAY9L,EAAeC,OAChEqI,EAAA7G,EAAA8G,cAAA,QAAMkE,SAAW,SAAC1C,GAAYA,EAAM2C,iBAAkB6B,EAAUxE,EAAM4C,OAAO+B,eAAe7B,MAAMC,UAC9FxE,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,aACXH,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,0BACXH,EAAA7G,EAAA8G,cAAA,QAAME,UAAU,eAAeD,eAAa,oBAC5CF,EAAA7G,EAAA8G,cAAA,SAAOJ,KAAK,iBAAiBM,UAAU,WAAWsE,YAAY,OAAOnK,KAAK,UAE9E0F,EAAA7G,EAAA8G,cAAA,UAAQE,UAAU,gEAAlB,2BCLHkG,gBAuBAC,IA9BJC,GAA0B,0BAC1BC,GAAwB,wBACxBC,GAA0C,0CAC1CC,GAAyC,yCAEzCvL,GAAgB,IAEtB,SAAUkL,KAAV,IAAArM,EAAA,OAAAd,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEe,OAFfF,EAAAE,KAAA,EAEqB6B,YAAKqL,IAF1B,OAGC,OADIzM,EAFLX,EAAAgC,KAAAhC,EAAAE,KAAA,EAGO+B,YAAK,CACPC,KAAMtB,YAAKqM,GAAyBtM,GACpCwB,OAAQJ,YAAKsL,MALlB,OAAArN,EAAAE,KAAA,gCAAAF,EAAAI,SAAAkN,IAuBA,SAAUL,GAAV3M,GAAA,IAAAnB,EAAAmD,EAAA,OAAAzC,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAA4Cf,EAA5CmB,EAAmCK,QAAnC,OAGmB,OAHnBD,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAGyBU,YAAK/B,EAAWO,kBAAmBD,GAH5D,OAIK,OADMmD,EAHX5B,EAAAsB,KAAAtB,EAAAR,KAAA,EAIWY,YAUP,CACHG,KAAMiM,GACNvM,QAAS,CAAC4M,eAZ0BjL,KAJrC,OAAA5B,EAAAR,KAAA,iBAOK,OAPLQ,EAAAT,KAAA,GAAAS,EAAAM,GAAAN,EAAA,SAAAA,EAAAR,KAAA,GAOWY,aAakBlE,EAbK8D,EAAAM,GAc9B,CACHC,KAAMkM,GACNxM,QAAS,CAAC/D,YAvBX,QASC,OATD8D,EAAAR,KAAA,GASO2C,YAAMf,IATb,QAAApB,EAAAR,KAAA,iCAAAQ,EAAAN,OAoBA,IAA6BxD,GApB7B4Q,GAAA,eCwDQnG,mBAjBf,SAAyBjJ,GACrB,MAAO,CACHC,eAAgBD,EAAMC,eACtBG,aAAcJ,EAAMI,aACpB+O,eAAgBnP,EAAMmP,iBAI9B,SAA4BjG,GACxB,MAAO,CACH6C,YAAa,SAACrM,GAAD,OAAewJ,EAAShD,GAAYxG,KACjDI,mBAAoB,SAACJ,EAAWqB,GAAZ,OAAwBmI,EdhD7C,SAA4BxJ,EAAWqB,GAC1C,MAAO,CACH8B,KAAMoC,GACN1C,QAAS,CAAC7C,YAAWqB,Yc6CgCsO,CAAmB3P,EAAWqB,KACnFuO,2BAA4B,SAACvO,GAAD,OAAamI,EDhE1C,SAAoCnI,GACvC,MAAO,CACH8B,KAAMmM,GACNzM,QAASxB,GC6DyCwO,CAA2BxO,KAC7EyO,0BAA2B,kBAAMtG,EDzD9B,CACHrG,KAAMoM,QC4DChG,CAlFR,SAAA/G,GAAqK,IAA9IjC,EAA8IiC,EAA9IjC,eAAgBG,EAA8H8B,EAA9H9B,aAAc+O,EAAgHjN,EAAhHiN,eAAgBpD,EAAgG7J,EAAhG6J,YAAajM,EAAmFoC,EAAnFpC,mBAAoBwP,EAA+DpN,EAA/DoN,2BAA4BE,EAAmCtN,EAAnCsN,0BAA2BlS,EAAQ4E,EAAR5E,MAEhKoM,oBACI,WAGI,OAFA5J,EAAmBxC,EAAMqD,OAAOjB,UAAWpC,EAAMqD,OAAOI,SACxDuO,EAA2BhS,EAAMqD,OAAOI,SACjC,WACHjB,EAAmBxC,EAAMqD,OAAOjB,UAAW,MAC3C8P,MAGR,CAAC1P,EAAoBwP,EAA4BE,EAA2BlS,IAGhF,IAAMmS,EAAM,SAAC/N,EAAGgO,GAAJ,OAAUhO,EAAIgO,GAM1B,SAASC,EAAiBtN,GACtB,OAAOA,EAAS/B,MAAQ+B,EAAS/B,KAAK8H,MAAQ/F,EAASA,SAa3D,OACIkG,EAAA7G,EAAA8G,cAACK,GAAD,CAAMC,MAAO7I,EAAemI,KAAMW,OAAQ,kBAAMgD,EAAY9L,EAAeC,OACvEqI,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,uBACVH,EAAA7G,EAAA8G,cAAA,eAAOpI,EAAagI,KAApB,OAEJG,EAAA7G,EAAA8G,cAAA,OAAKE,UAAU,kCACXH,EAAA7G,EAAA8G,cAAA,SAAOE,UAAU,6BACbH,EAAA7G,EAAA8G,cAAA,aACAD,EAAA7G,EAAA8G,cAAA,UACID,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,kBAAd,QACAH,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,kBAAd,cAGJH,EAAA7G,EAAA8G,cAAA,aACC2G,EAAeS,OAAOD,GAAkBhG,IAAI,SAACtH,EAAUuH,GACpD,OACIrB,EAAA7G,EAAA8G,cAAA,MAAIqB,IAAKD,GACLrB,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,kBAAkBrG,EAAS/B,KAAK8H,MAC9CG,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,kBAAkBrG,EAASA,aA5BrE,WACI,IATawN,EASPC,EAAYX,EAAeS,OAAOD,GACxC,OAAOG,EAAUnR,OAAS,EACtB4J,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,eAAemB,IAAK,WAC9BtB,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,kBAAd,WACAH,EAAA7G,EAAA8G,cAAA,MAAIE,UAAU,mBAbTmH,EAamCC,EAAUnG,IAAI,SAAAtH,GAAQ,OAAIA,EAASA,WAZ5EwN,GAAWJ,EAAMM,KAAKC,KAAKH,EAAQI,OAAOR,EAAK,GAAKI,EAAQlR,QAAU,GAYiBuR,aAE1F,GAyBSC,oCC7DfC,GAAe,CACjBlQ,IAAO,KACPkI,KAAQ,MAGG,SAASiI,KAA0C,IAA9BrQ,EAA8BtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0R,GAAc7J,EAAQ7H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9D,OAAI2H,EAAO1D,OAAS0K,GACThH,EAAOhE,QAAQjC,KAEfN,ECTf,IAAMoQ,GAAe,EAEN,SAASE,KAAmD,IAA9BtQ,EAA8BtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0R,GAAc7J,EAAQ7H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvE,OAAI2H,EAAO1D,OAAStB,EACTgF,EAAOhE,QAAQF,SAEfrC,ECNA,SAASuQ,KAAoC,IAApBvQ,EAAoBtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAI6H,EAAQ7H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAI2H,EAAO1D,OAASwE,GACTd,EAAOhE,QAAQqF,SAEf5H,ECJA,SAASwQ,KAAmC,IAApBxQ,EAAoBtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAI6H,EAAQ7H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAI2H,EAAO1D,OAASyH,GACT/D,EAAOhE,QAAQqI,QAEf5K,0BCGTyQ,GAAe,CACnBnJ,GACAkG,GACAzI,GACAzB,EACA9B,EACA+I,GACAwE,IAGa,SAAS2B,KAAmChS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,OAAR6H,EAAQ7H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,OAAI6R,GAAaE,KAAK,SAAA9N,GAAI,OAAIA,IAAS0D,EAAO1D,QAC1C+N,KAAMC,aAAa,CAACC,QAAS,gDAAsCzS,OAAQ,SAAU0S,QAAS,MACvFxK,EAAOhE,SAEX,KCtBT,IAAM6N,GAAe,CACjBlQ,IAAO,KACPkI,KAAQ,qBACR4I,cAAiB,MAGN,SAASC,KAAoD,IAA9BjR,EAA8BtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0R,GAAc7J,EAAQ7H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxE,OAAI2H,EAAO1D,OAASiC,GACTyB,EAAOhE,QAAQtC,eAEfD,ECVf,IAAMoQ,GAAe,CACjBlQ,IAAO,KACPkI,KAAQ,qBAGG,SAAS8I,KAAkD,IAA9BlR,EAA8BtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0R,GAAc7J,EAAQ7H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtE,OAAI2H,EAAO1D,OAASQ,EACuB,OAAhCkD,EAAOhE,QAAQnC,aAAwBmG,EAAOhE,QAAQnC,aAAegQ,GAErEpQ,ECTf,IAAMoQ,GAAe,GAEN,SAASe,KAAoD,IAA9BnR,EAA8BtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0R,GAAc7J,EAAQ7H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxE,OAAI2H,EAAO1D,OAASiM,GACTvI,EAAOhE,QAAQ4M,eAEfnP,ECGA,IAAAoR,GAAA,SAACC,GAAD,OACbC,aAAgB,CACZ9Q,OAAQ+Q,aAAcF,GACtBvF,iBACAxL,QACAsH,YACAgD,WACA3K,kBACAG,gBACA+O,kBACA3Q,0CCAIgT,IANJC,GAAiBC,eAEjBC,GAAmBxU,OAAOyU,sCAAwCC,KAE3DR,GAAUS,eAEvB,SAAUN,KAAV,OAAA/P,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OADJF,EAAAE,KAAA,EACUvC,YAAI,CACN2N,KACAjG,KACAtC,KACAzD,IACAyD,KACAzB,IACA0L,KACAhJ,KACAsE,OAVR,wBAAAtI,EAAAI,SAAA+P,cCbMC,GD2BS,WACX,IAAMC,EAAQC,aACVC,GAAkBd,IAClBM,GACIS,aACIC,aAAiBhB,IACjBI,MAMZ,OAFAA,GAAea,IAAId,IAEZS,ECvCSA,GAEpBM,IAASC,OACLjK,EAAA7G,EAAA8G,cAACiK,EAAA,EAAD,CAAUR,MAAOD,IACbzJ,EAAA7G,EAAA8G,cCAO,WAEb,OACID,EAAA7G,EAAA8G,cAACkK,GAAA,EAAD,CAAiBrB,QAASA,IACtB9I,EAAA7G,EAAA8G,cAACmK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjCxK,EAAA7G,EAAA8G,cAACmK,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWE,KACpCzK,EAAA7G,EAAA8G,cAACmK,EAAA,EAAD,CAAOE,KAAK,mBAAmBC,UAAWG,KAC1C1K,EAAA7G,EAAA8G,cAACmK,EAAA,EAAD,CAAOE,KAAK,gCAAgCC,UAAWI,KACvD3K,EAAA7G,EAAA8G,cAACmK,EAAA,EAAD,CAAOE,KAAK,+BAA+BC,UAAWK,KACtD5K,EAAA7G,EAAA8G,cAACmK,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,UAAWM,KACxC7K,EAAA7G,EAAA8G,cAACmK,EAAA,EAAD,CAAOE,KAAK,8CAA8CC,UAAWO,ODVvE,OAGJC,SAASC,eAAe,ShCkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzV,KAAK,SAAA0V,GACjCA,EAAaC","file":"static/js/main.0257b988.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pp_logo_transaparent.5658e215.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultHeaderConfigs = {\n  headers: {\n    'Content-Type': 'application/json',\n    'mode': 'cors'\n  }\n};\n\nexport const API_URL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL : 'https://planning-poker-241613.appspot.com';\n\nexport const getData = (url) => {\n  return fetch(url, defaultHeaderConfigs)\n  .then(response => {\n    if(!response.ok) {\n        throw Error('HTTP status ' + response.status);\n    }\n    return response.json();\n  })\n  .catch(error => {\n     throw error ? error : Error('Get data failed from url ' + url);\n  });\n};\n\nexport const postData = (url = '', data = {}) => {\n  return fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n  })\n  .then(response => {\n    if(!response.ok) {\n        throw Error('HTTP status ' + response.status);\n    }\n    return response.json();\n  })\n  .catch(error => {\n     throw error ? error : Error('Post data failed to url ' + url);\n  });\n};\n\nexport const putData = (url = '', data = {}) => {\n    return fetch(url, {\n        method: 'PUT',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    })\n        .then(response => {\n            if(!response.ok) {\n                throw Error('HTTP status ' + response.status);\n            }\n            return response.json();\n        })\n        .catch(error => {\n            throw error ? error : Error('Post data failed to url ' + url);\n        });\n};\n\nexport const deleteData = (url) => {\n  return fetch(url, {\n    method: 'DELETE',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin'\n  })\n  .then(response => {\n    if(!response.ok) {\n        throw Error('HTTP status ' + response.status);\n    }\n    return response.json();\n  })\n  .catch(error => {\n    throw error ? error : Error('Delete data failed from url ' + url);\n  });\n};","import {API_URL, getData, postData, putData, deleteData} from '../../Fetch.api';\n\nexport const MeetingAPI = {\n  all: () => getData(`${API_URL}/meetings`),\n  byId: meetingId => getData(`${API_URL}/meetings/${meetingId}`),\n  create: (body) => postData(`${API_URL}/meetings`, body),\n  delete: meetingId => deleteData(`${API_URL}/meetings/${meetingId}`),\n  getCurrentStory: meetingId => getData(`${API_URL}/meetings/${meetingId}/currentStory`),\n  updateCurrentStory: (meetingId, body) => putData(`${API_URL}/meetings/${meetingId}/currentStory`, body)\n};","export const CurrentMeetingId = state => state.currentMeeting._id;\nexport const CurrentStory = state => state.currentStory;\nexport const CurrentUserId = state => state.user._id;\nexport const LocationState = state => state.router.location.state;\n","import {API_URL, deleteData, getData, postData, putData} from '../../Fetch.api';\n\nexport const StoriesAPI = {\n    all: (meetingId) => {\n        var url = new URL(`${API_URL}/stories`);\n        var params = {meetingId: meetingId};\n        url.search = new URLSearchParams(params);\n        return getData(url);\n    },\n    post: (meetingId, body) => {\n        var url = new URL(`${API_URL}/stories`);\n        var params = {meetingId: meetingId};\n        url.search = new URLSearchParams(params);\n        return postData(url, body)\n    },\n    delete: storyId => deleteData(`${API_URL}/stories/${storyId}`),\n    getStoryEstimates: storyId => getData(`${API_URL}/stories/${storyId}/estimates`),\n    updateStoryEstimate: (storyId, body) => putData(`${API_URL}/stories/${storyId}/estimates`, body)\n};","import {call, put, takeLatest} from 'redux-saga/effects';\nimport { StoriesAPI } from '../API/Stories.api';\n\nexport const STORY_ESTIMATE_REQUESTED = 'STORY_ESTIMATE_REQUESTED';\nexport const RESET_STORY_ESTIMATE_REQUESTED = 'RESET_STORY_ESTIMATE_REQUESTED';\nexport const STORY_ESTIMATE_SUCCESS = 'STORY_ESTIMATE_SUCCESS';\nexport const STORY_ESTIMATE_ERROR = 'STORY_ESTIMATE_ERROR';\n\n\nexport function* watchStoryEstimateAsync() {\n    yield takeLatest(STORY_ESTIMATE_REQUESTED, putStoryEstimateAsync);\n    yield takeLatest(RESET_STORY_ESTIMATE_REQUESTED, resetStoryEstimateAsync);\n}\n\nexport function PutStoryEstimate(userId, storyId, estimate){\n    return {\n        type: STORY_ESTIMATE_REQUESTED,\n        payload: { userId, storyId, estimate }\n    }\n}\n\nexport function* putStoryEstimateAsync({payload: { userId, storyId, estimate } }){\n    try {\n        yield call(StoriesAPI.updateStoryEstimate, storyId, generateBody(userId, estimate));\n        yield put(storyEstimateSuccess(estimate));\n    }\n    catch (e) {\n        yield put(storyEstimateError(e));\n    }\n}\n\nexport function ResetStoryEstimate(){\n    return {\n        type: RESET_STORY_ESTIMATE_REQUESTED\n    }\n}\n\nexport function* resetStoryEstimateAsync(){\n    yield put(storyEstimateSuccess(0));\n}\n\nfunction generateBody(userId, estimate) {\n    return  {\n        user: userId,\n        estimate: estimate\n    };\n}\n\nfunction storyEstimateSuccess(estimate) {\n    return {\n        type: STORY_ESTIMATE_SUCCESS,\n        payload: {estimate}\n    };\n}\n\nfunction storyEstimateError(error) {\n    return {\n        type: STORY_ESTIMATE_ERROR,\n        payload: {error}\n    };\n}","import {MeetingAPI} from '../API/Meeting.api'\nimport {call, delay, put, race, select, take, takeLatest} from 'redux-saga/effects';\nimport {ResetStoryEstimate} from \"../../Stories/Actions/StoryEstimateActions\";\nimport {CurrentStory} from \"../../Common/selectors\";\n\nexport const CURRENT_STORY_SUCCESS = 'CURRENT_STORY_SUCCESS';\nexport const CURRENT_STORY_ERROR = 'CURRENT_STORY_ERROR';\nexport const CURRENT_STORY_GET_REQUESTED ='CURRENT_STORY_GET_REQUESTED';\nexport const CURRENT_STORY_START_POLLING_REQUESTED = 'CURRENT_STORY_START_POLLING_REQUESTED';\nexport const CURRENT_STORY_STOP_POLLING_REQUESTED = 'CURRENT_STORY_STOP_POLLING_REQUESTED';\n\n\nexport const POLLING_DELAY = 4000;\n\nexport function* watchCurrentStoryAsync() {\n    yield takeLatest(CURRENT_STORY_GET_REQUESTED, getCurrentStoryAsync);\n    while (true) {\n        let payload = yield take(CURRENT_STORY_START_POLLING_REQUESTED);\n        yield race({\n            task: call(pollCurrentStoryAsync, payload),\n            cancel: take(CURRENT_STORY_STOP_POLLING_REQUESTED)\n        });\n    }\n}\n\nexport function GetCurrentStory(meetingId){\n    return {\n        type: CURRENT_STORY_GET_REQUESTED,\n        payload: meetingId\n    }\n}\n\nexport function* getCurrentStoryAsync({payload: meetingId}) {\n    try {\n        const story = yield call(MeetingAPI.getCurrentStory, meetingId);\n        yield put(CurrentStorySuccess(story));\n    }\n    catch (e) {\n        yield put(CurrentStoryError(e));\n    }\n}\n\nexport function StartPollingCurrentStory(meetingId) {\n    return {\n        type: CURRENT_STORY_START_POLLING_REQUESTED,\n        payload: meetingId\n    }\n}\n\nexport function StopPollingCurrentStory() {\n    return {\n        type: CURRENT_STORY_STOP_POLLING_REQUESTED\n    }\n}\n\nexport function* pollCurrentStoryAsync({payload: meetingId}) {\n    while (true) {\n        try {\n            const currentStory = yield select(CurrentStory);\n            const story = yield call(MeetingAPI.getCurrentStory, meetingId);\n\n            if (story) { yield currentStory._id !== story._id ? put(ResetStoryEstimate()) : ''; }\n            else       { yield currentStory._id !== null      ? put(ResetStoryEstimate()) : ''; }\n\n            yield put(CurrentStorySuccess(story));\n        }\n        catch (e) {\n            yield put(CurrentStoryError(e));\n        }\n        yield delay(POLLING_DELAY);\n    }\n}\n\nexport function CurrentStorySuccess(currentStory) {\n    return {\n        type: CURRENT_STORY_SUCCESS,\n        payload: {currentStory}\n    };\n}\n\nexport function CurrentStoryError(error) {\n    return {\n        type: CURRENT_STORY_ERROR,\n        payload: {error}\n    };\n}\n","import {MeetingAPI} from '../API/Meeting.api';\nimport {call, put, select, takeLatest} from 'redux-saga/effects';\nimport {CurrentMeetingId} from '../../Common/selectors';\nimport {GetCurrentStory} from \"./CurrentStoryActions\";\n\nexport const CURRENT_MEETING_SUCCESS = 'CURRENT_MEETING_SUCCESS';\nexport const CURRENT_MEETING_ERROR = 'CURRENT_MEETING_ERROR';\nexport const CURRENT_MEETING_GET_REQUESTED = 'CURRENT_MEETING_GET_REQUESTED';\nexport const UPDATE_CURRENT_STORY_REQUESTED = 'UPDATE_CURRENT_STORY_REQUESTED';\n\nexport function* watchCurrentMeetingAsync() {\n    yield takeLatest(CURRENT_MEETING_GET_REQUESTED, getCurrentMeetingAsync);\n    yield takeLatest(UPDATE_CURRENT_STORY_REQUESTED, updateCurrentStoryAsync);\n}\n\nexport function GetCurrentMeeting(meetingId) {\n    return {\n        type: CURRENT_MEETING_GET_REQUESTED,\n        payload: meetingId\n    }\n}\n\nexport function* getCurrentMeetingAsync({payload: meetingId}) {\n    try {\n        let currentMeetingId = yield select(CurrentMeetingId);\n        if (currentMeetingId === null || currentMeetingId !== meetingId) {\n            const meeting = yield call(MeetingAPI.byId, meetingId);\n            yield put(CurrentMeetingSuccess(meeting));\n        }\n    }\n    catch (e) {\n        yield put(CurrentMeetingError(e));\n    }\n}\n\nexport function UpdateCurrentStory(meetingId, storyId) {\n    return {\n        type: UPDATE_CURRENT_STORY_REQUESTED,\n        payload: {meetingId, storyId}\n    }\n}\n\nexport function* updateCurrentStoryAsync({payload: {meetingId, storyId}}) {\n    try {\n        yield call(MeetingAPI.updateCurrentStory, meetingId, GenerateBody(storyId));\n        yield put(GetCurrentStory(meetingId));\n    }\n    catch (e) {\n        yield put(CurrentMeetingError(e));\n    }\n}\n\nexport function CurrentMeetingSuccess(currentMeeting) {\n    return {\n        type: CURRENT_MEETING_SUCCESS,\n        payload: {currentMeeting}\n    };\n}\n\nexport function CurrentMeetingError(error) {\n    return {\n        type: CURRENT_MEETING_ERROR,\n        payload: {error}\n    };\n}\n\nfunction GenerateBody(storyId) {\n    return {\n        storyId: storyId\n    }\n}","import {LOCATION_CHANGE, push, replace} from 'connected-react-router';\nimport {delay, put, select, takeLatest} from 'redux-saga/effects';\nimport {GetCurrentMeeting} from '../Meetings/Actions/CurrentMeetingActions';\nimport {CurrentMeetingId, CurrentUserId} from \"../Common/selectors\";\n\nexport const viewCreateMeeting = () => push('/meeting/create/');\nexport const viewCreateStory = () => push('/story/create/');\nexport const viewMeeting = (meetingId) => push(`/meeting/${ meetingId }/estimate/`);\nexport const viewStory = (meetingId, storyId) => push(`/meeting/${ meetingId }/story/${ storyId }/summary/`);\nexport const viewStories = (meetingId) => push(`/meeting/${ meetingId }/stories/`);\nexport const refreshStories = (meetingId) => replace(`/meeting/${ meetingId }/stories/`);\nexport const viewMeetings = () => push('/meetings/');\nexport const refreshMeetings = () => replace('/meetings/');\n\nexport function* routerActions(action) {\n    const currentUserId = yield select(CurrentUserId);\n    const pathname = action.payload.location.pathname;\n    if (currentUserId === null && pathname !== '/') {\n        yield delay(1);\n        yield put(replace({pathname: '/', state: {'nextPathname': pathname}}));\n    }\n\n    if (pathname.startsWith(\"/meeting/\") && !pathname.endsWith('create/')) {\n        const meetingId = pathname.split('/')[2];\n        yield put(GetCurrentMeeting(meetingId));\n    }\n\n    if (pathname.startsWith(\"/story/create/\")) {\n        const currentMeetingId = yield select(CurrentMeetingId);\n        if (!currentMeetingId) {\n            yield delay(1);\n            yield put(refreshMeetings());\n        }\n    }\n}\n\nexport function* watchRouterAsync() {\n    yield takeLatest(LOCATION_CHANGE, routerActions);\n}\n","import {MeetingAPI} from '../API/Meeting.api';\nimport {call, delay, put, race, take, takeLatest} from 'redux-saga/effects';\nimport {viewMeetings, refreshMeetings} from '../../Navigation/route-actions';\n\nexport const MEETINGS_SUCCESS = 'MEETINGS_SUCCESS';\nexport const MEETINGS_ERROR = 'MEETINGS_ERROR';\nexport const MEETING_POST_REQUESTED = 'MEETING_POST_REQUESTED';\nexport const MEETING_DELETE_REQUESTED = 'MEETING_DELETE_REQUESTED';\nexport const MEETINGS_START_POLLING_REQUESTED = 'MEETINGS_START_POLLING_REQUESTED';\nexport const MEETINGS_STOP_POLLING_REQUESTED = 'MEETINGS_STOP_POLLING_REQUESTED';\n\nexport const POLLING_DELAY = 4000;\n\nexport function* watchMeetingsAsync() {\n    yield takeLatest(MEETING_POST_REQUESTED, postMeetingAsync);\n    yield takeLatest(MEETING_DELETE_REQUESTED, deleteMeetingAsync);\n    while (true) {\n        let payload = yield take(MEETINGS_START_POLLING_REQUESTED);\n        yield race({\n            task: call(pollMeetingsAsync, payload),\n            cancel: take(MEETINGS_STOP_POLLING_REQUESTED)\n        });\n    }\n}\n\nexport function StartPollingMeetings() {\n    return {\n        type: MEETINGS_START_POLLING_REQUESTED\n    }\n}\n\nexport function* pollMeetingsAsync() {\n    while (true) {\n        try {\n            const meetings = yield call(MeetingAPI.all);\n            yield put(MeetingsSuccess(meetings));\n        } catch (error) {\n            yield put(MeetingsError(error));\n        }\n        yield delay(POLLING_DELAY);\n    }\n}\n\nexport function StopPollingMeetings() {\n    return {\n        type: MEETINGS_STOP_POLLING_REQUESTED\n    }\n}\n\nexport function PostMeeting(meetingName) {\n    return {\n        type: MEETING_POST_REQUESTED,\n        payload: meetingName\n    }\n}\n\nexport function* postMeetingAsync({payload: meetingName}) {\n    try {\n        yield call(MeetingAPI.create, GenerateBody(meetingName));\n        yield put(viewMeetings())\n    }\n    catch (e) {\n        yield put(MeetingsError(e));\n    }\n}\n\nexport function DeleteMeeting(meetingId) {\n    return {\n        type: MEETING_DELETE_REQUESTED,\n        payload: meetingId\n    }\n}\n\nexport function* deleteMeetingAsync({payload: meetingId}) {\n    try {\n        yield call(MeetingAPI.delete, meetingId);\n        yield put(refreshMeetings())\n    }\n    catch (e) {\n        yield put(MeetingsError(e));\n    }\n}\n\nexport function MeetingsSuccess(meetings) {\n    return {\n        type: MEETINGS_SUCCESS,\n        payload: {meetings}\n    };\n}\n\nexport function MeetingsError(error) {\n    return {\n        type: MEETINGS_ERROR,\n        payload: {error}\n    };\n}\n\nfunction GenerateBody(meetingName) {\n    return {\n        name: meetingName\n    };\n}\n","import React from 'react';\n\nfunction BackButton({goBack}) {\n    return goBack ?\n        (<span data-uk-icon=\"icon: arrow-left; ratio: 1.25\" className=\"uk-button uk-button-secondary uk-button-small uk-position-small uk-position-top-left pp-back-arrow\"\n               onClick={goBack}/>) :\n        (<></>);\n}\n\nexport function Page({title, onBack, children}) {\n    return (\n        <div className=\"default-background\">\n            <div className=\"uk-container uk-text-center@m\">\n                <div className=\"uk-section uk-section-xsmall\"><BackButton goBack={onBack}/></div>\n                <h1 className=\"uk-heading-divider uk-margin-top\">{title}</h1>\n                <div className=\"uk-align-center uk-width-1-2@m\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {viewCreateMeeting, viewMeeting} from '../../../Navigation/route-actions';\nimport {DeleteMeeting, StartPollingMeetings, StopPollingMeetings} from '../../Actions/MeetingsActions';\nimport {Page} from '../../../Common/Page';\n\nexport function Meetings({meetings = [], startPollingMeetings, stopPollingMeetings, deleteMeeting, goToMeeting, goToCreateMeeting}) {\n    useEffect(\n        () => {\n            startPollingMeetings();\n            return () => {\n                stopPollingMeetings();\n            };\n        },\n        [startPollingMeetings, stopPollingMeetings]\n    );\n\n    return (\n        <Page title='Meetings'>\n            {meetings.map((meeting, index) =>\n                <div key={index} className=\"uk-card uk-card-primary uk-card-body uk-margin-top\"\n                     onClick={() => goToMeeting(meeting._id)}>\n                    <div className=\"uk-flex uk-flex-middle\" data-uk-grid>\n                        <div className=\"uk-width-5-6\">\n                            <span className=\"\">{meeting.name}</span>\n                        </div>\n                        <div className=\"uk-padding-remove-left uk-flex uk-flex-right uk-width-1-6\">\n                            <button\n                                className=\"uk-icon-button\"\n                                data-uk-icon=\"icon: trash\"\n                                uk-tooltip=\"title: Delete Meeting\"\n                                onClick={event => {\n                                    event.stopPropagation();\n                                    deleteMeeting(meeting._id);\n                                }}>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"uk-align-center uk-flex uk-flex-center\">\n                <button\n                    className=\"uk-icon-button\"\n                    data-uk-icon=\"icon: plus\"\n                    uk-tooltip=\"title: Add Meeting\"\n                    onClick={goToCreateMeeting}>\n                </button>\n            </div>\n        </Page>\n\n    );\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        meetings: state.meetings,\n        error: state.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        startPollingMeetings: () => dispatch(StartPollingMeetings()),\n        stopPollingMeetings: () => dispatch(StopPollingMeetings()),\n        deleteMeeting: (meetingId) => dispatch(DeleteMeeting(meetingId)),\n        goToMeeting: (meetingId) => dispatch(viewMeeting(meetingId)),\n        goToCreateMeeting: () => dispatch(viewCreateMeeting())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meetings)\n","import {StoriesAPI} from '../API/Stories.api'\nimport {call, put, select, takeLatest} from 'redux-saga/effects';\nimport {CurrentMeetingId} from '../../Common/selectors';\nimport {refreshStories, viewStories} from '../../Navigation/route-actions';\n\nexport const STORIES_SUCCESS = 'STORIES_SUCCESS';\nexport const STORIES_ERROR = 'STORIES_ERROR';\nexport const STORIES_GET_REQUESTED = 'STORIES_GET_REQUESTED';\nexport const STORIES_POST_REQUESTED = 'STORIES_POST_REQUESTED';\nexport const STORY_DELETE_REQUESTED = 'STORY_DELETE_REQUESTED';\n\nexport function* watchStoriesAsync() {\n    yield takeLatest(STORIES_GET_REQUESTED, getStoriesAsync);\n    yield takeLatest(STORIES_POST_REQUESTED, postStoryAsync);\n    yield takeLatest(STORY_DELETE_REQUESTED, deleteStoryAsync);\n}\n\nexport function GetStories(meetingId) {\n    return {\n        type: STORIES_GET_REQUESTED,\n        payload: meetingId\n    }\n}\n\nexport function* getStoriesAsync({payload: meetingId}) {\n    try {\n        const stories = yield call(StoriesAPI.all, meetingId);\n        yield put(StoriesSuccess(stories));\n    } catch (error) {\n        yield put(StoriesError(error));\n    }\n}\n\nexport function PostStory(storyName) {\n    return {\n        type: STORIES_POST_REQUESTED,\n        payload: {\n            name: storyName\n        }\n    }\n}\n\nexport function* postStoryAsync({payload}) {\n    try {\n        const currentMeetingId = yield select(CurrentMeetingId);\n        yield call(StoriesAPI.post, currentMeetingId, payload);\n        yield put(viewStories(currentMeetingId));\n    }\n    catch (e) {\n        yield put(StoriesError(e));\n    }\n}\n\nexport function DeleteStory(storyId) {\n    return {\n        type: STORY_DELETE_REQUESTED,\n        payload: storyId\n    }\n}\n\nexport function* deleteStoryAsync({payload: storyId}) {\n    try {\n        const currentMeetingId = yield select(CurrentMeetingId);\n        yield call(StoriesAPI.delete, storyId);\n        yield put(refreshStories(currentMeetingId));\n    }\n    catch (e) {\n        yield put(StoriesError(e));\n    }\n}\n\nexport function StoriesSuccess(stories) {\n    return {\n        type: STORIES_SUCCESS,\n        payload: {stories: stories}\n    };\n}\n\nexport function StoriesError(error) {\n    return {\n        type: STORIES_ERROR,\n        payload: {error}\n    };\n}","import React, {useEffect} from 'react';\nimport {viewCreateStory, viewMeeting, viewMeetings, viewStory} from '../../../Navigation/route-actions';\nimport {Page} from '../../../Common/Page';\nimport {connect} from 'react-redux';\nimport {DeleteStory, GetStories} from \"../../Actions/StoriesActions\";\n\nexport function Stories({currentMeeting, stories = [], goToMeetings, goToStory, deleteStory, createStory, goToEstimate, getStories, match}) {\n\n    useEffect(\n        () => {\n            getStories(match.params.meetingId);\n        },\n        [getStories, match]\n    );\n\n    return (\n        <Page title={currentMeeting.name} onBack={goToMeetings}>\n            <button className=\"uk-button uk-button-secondary uk-button-small uk-position-small uk-position-top-right\"\n                    onClick={() => goToEstimate(currentMeeting._id)}>\n                Estimate\n            </button>\n\n            {stories.map((story, index) =>\n                <div key={index} className=\"uk-card uk-card-primary uk-card-body uk-margin-top uk-padding-small\"\n                     onClick={() => goToStory(currentMeeting._id, story._id)}>\n                    <div className=\"uk-flex uk-flex-middle\" data-uk-grid>\n                        <div className=\"uk-flex uk-flex-left uk-width-5-6\">\n                            <div className=\"uk-flex uk-flex-column\">\n                                <div className=\"uk-text-left\">{story.name}</div>\n                                <div className=\"uk-align-left uk-text-center uk-width-auto uk-label uk-margin-small uk-margin-remove-bottom\">\n                                    {story.estimate_avg ? 'Points: ' + story.estimate_avg : 'Not estimated'}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"uk-padding-remove-left uk-flex uk-flex-middle uk-flex-right uk-width-1-6\">\n                            <button\n                                className=\"uk-icon-button\"\n                                data-uk-icon=\"icon: trash\"\n                                uk-tooltip=\"title: Delete Story\"\n                                onClick={event => {\n                                    event.stopPropagation();\n                                    deleteStory(story._id);\n                                }}>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"uk-align-center uk-flex uk-flex-center\">\n                <button\n                    className=\"uk-icon-button\"\n                    data-uk-icon=\"icon: plus\"\n                    uk-tooltip=\"title: Add Story\"\n                    onClick={createStory}>\n                </button>\n            </div>\n\n        </Page>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentMeeting: state.currentMeeting,\n        stories: state.stories,\n        error: state.error\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        goToMeetings: () => dispatch(viewMeetings()),\n        goToStory: (meetingId, storyId) => dispatch(viewStory(meetingId, storyId)),\n        deleteStory: (storyId) => dispatch(DeleteStory(storyId)),\n        createStory: () => dispatch(viewCreateStory()),\n        goToEstimate: (meetingId) => dispatch(viewMeeting(meetingId)),\n        getStories: (meetingId) => dispatch(GetStories(meetingId))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stories);\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {PutStoryEstimate, ResetStoryEstimate} from '../../Actions/StoryEstimateActions';\nimport {viewMeetings, viewStories} from '../../../Navigation/route-actions';\nimport {Page} from '../../../Common/Page';\nimport {StartPollingCurrentStory, StopPollingCurrentStory} from \"../../../Meetings/Actions/CurrentStoryActions\";\n\nexport function StoryEstimate({storyEstimate, currentMeeting, user, currentStory, goToMeetings, goToStories, updateStoryEstimate, resetStoryEstimate, startPollingCurrentStory, stopPollingCurrentStory, match}) {\n    // TODO: Move estimations to store\n    const estimation = [1, 2, 3, 5, 8, 13];\n\n    useEffect(\n        () => {\n            startPollingCurrentStory(match.params.meetingId);\n            return () => {\n                stopPollingCurrentStory();\n                resetStoryEstimate();\n            };\n        },\n        [startPollingCurrentStory, stopPollingCurrentStory, resetStoryEstimate, match],\n    );\n\n    return (\n        <Page title={currentMeeting.name} onBack={goToMeetings}>\n            <button className=\"uk-button uk-button-secondary uk-button-small uk-position-small uk-position-top-right\"\n                    onClick={() => goToStories(currentMeeting._id)}>Host\n            </button>\n            <dl className=\"uk-description-list\">\n                <dt># {currentStory.name} :</dt>\n            </dl>\n            <div className=\"uk-align-center uk-width-1-1@m\">\n                {estimation.map((estimate, i) =>\n                    <button key={i} onClick={() => updateStoryEstimate(user._id, currentStory._id, estimate)}\n                            className={`uk-button uk-margin-small-top uk-width-1-1 uk-inline uk-button-primary ${ storyEstimate === estimate ? 'selected' : '' }`}\n                            disabled={currentStory._id === null}>\n                        {estimate}\n                        <span\n                            className={'uk-position-center-right uk-background-muted uk-text-emphasis uk-label uk-margin-small-right'}\n                            hidden={storyEstimate !== estimate}>Selected</span>\n                    </button>)\n                }\n            </div>\n        </Page>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        storyEstimate: state.storyEstimate,\n        currentMeeting: state.currentMeeting,\n        user: state.user,\n        currentStory: state.currentStory\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        goToMeetings: () => dispatch(viewMeetings()),\n        goToStories: (meetingId) => dispatch(viewStories(meetingId)),\n        updateStoryEstimate: (userId, storyId, estimate) => dispatch(PutStoryEstimate(userId, storyId, estimate)),\n        resetStoryEstimate: () => dispatch(ResetStoryEstimate()),\n        startPollingCurrentStory: (meetingId) => dispatch(StartPollingCurrentStory(meetingId)),\n        stopPollingCurrentStory: () => dispatch(StopPollingCurrentStory()),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoryEstimate)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PostMeeting } from '../../Actions/MeetingsActions';\nimport { viewMeetings } from '../../../Navigation/route-actions';\nimport { Page } from '../../../Common/Page';\n\nexport function CreateMeeting({postMeeting, goToMeetings}) {\n  return (\n    <Page title='Add Meeting' onBack={goToMeetings}>\n      <form onSubmit={ (event) => { event.preventDefault(); postMeeting(event.target.meetingInputName.value.trim()); } }>\n        <div className=\"uk-margin\">\n          <div className=\"uk-inline uk-width-1-1\">\n            <span className=\"uk-form-icon\" data-uk-icon=\"icon: users\"/>\n            <input name=\"meetingInputName\" className=\"uk-input\" placeholder=\"Name\" type=\"text\"/>\n          </div>\n          <button className=\"uk-button uk-button-primary uk-margin-small-top uk-width-1-1\">\n            CREATE\n          </button>\n        </div>\n      </form>\n    </Page>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    postMeeting: (meetingName) => dispatch(PostMeeting(meetingName)),\n    goToMeetings: () => dispatch(viewMeetings())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(CreateMeeting);\n","import {API_URL, getData, postData} from '../../Fetch.api';\n\nexport const UserAPI = {\n  all: () => getData(`${API_URL}/users`),\n  byId: userId => getData(`${API_URL}/users/${userId}`),\n  create: (body) => postData(`${API_URL}/users`, body)\n};","import {UserAPI} from '../API/User.api';\nimport {call, put, select, takeLatest} from 'redux-saga/effects';\nimport {push} from 'connected-react-router';\nimport {LocationState} from \"../../Common/selectors\";\nimport {viewMeetings} from \"../../Navigation/route-actions\";\n\n\nexport const USER_GET_REQUESTED = 'USER_GET_REQUESTED';\nexport const USER_POST_REQUESTED = 'USER_POST_REQUESTED';\nexport const USER_SUCCESS = 'USER_SUCCESS';\nexport const USER_ERROR = 'USER_ERROR';\n\nexport function* watchUserAsync() {\n    yield takeLatest(USER_GET_REQUESTED, getUserAsync);\n    yield takeLatest(USER_POST_REQUESTED, postUserAsync);\n}\n\nexport function* getUserAsync({payload: userId}) {\n    try {\n        const user = yield call(UserAPI.byId, userId);\n        yield put(UserSuccess(user));\n    } catch (e) {\n        yield put(UserError(e));\n    }\n}\n\nexport function PostUser(username) {\n    return {\n        type: USER_POST_REQUESTED,\n        payload: username\n    }\n}\n\nexport function* postUserAsync({payload: username}){\n    try {\n        const user = yield call(UserAPI.create, GenerateBody(username));\n        yield put(UserSuccess(user));\n        const locationState = yield select(LocationState);\n        yield locationState !== undefined ? put(push(locationState.nextPathname)) : put(viewMeetings());\n    }\n    catch (e) {\n        yield put(UserError(e));\n    }\n}\n\nfunction GenerateBody(username) {\n    return  {\n        name: username\n    };\n}\n\nfunction UserSuccess(user) {\n    return {\n        type: USER_SUCCESS,\n        payload: {user}\n    };\n}\n\nfunction UserError(error) {\n    return {\n        type: USER_ERROR,\n        payload: {error}\n    };\n}\n","import loginImg from '../../resources/images/pp_logo_transaparent.png';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {PostUser} from '../Actions/UserActions';\n\nexport function CreateUser({postUser}) {\n\n    return (\n        <div className=\"uk-container uk-flex uk-flex-middle uk-height-viewport pp-login\">\n            <div className=\"uk-animation-slide-left-medium uk-text-center\"><h2>Welcome to planning poker</h2></div>\n            <div className=\"uk-animation-scale-up uk-width-1-2@s uk-width-3-4@m\"><img src={loginImg} alt=\"login\"/></div>\n            <div>\n                <form onSubmit={event => {\n                    PostNewUser(event, postUser)\n                }}>\n                    <div className=\"uk-margin\">\n                        <div className=\"uk-animation-slide-top uk-inline uk-width-1-1 uk-margin-small-top\">\n                            <span className=\"uk-form-icon\" data-uk-icon=\"icon: user\"/>\n                            <input name=\"userInputName\" className=\"uk-input\" placeholder=\"Name\" type=\"text\"/>\n                        </div>\n                        <button className=\"uk-animation-slide-bottom uk-button uk-button-primary uk-width-1-1 uk-margin-small-top\">\n                            LOGIN / CREATE\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n\n    function PostNewUser(event, postUser) {\n        event.preventDefault();\n        postUser(event.target.userInputName.value.trim());\n    }\n\n}\n\nconst MapDispatchToProps = dispatch => ({\n    postUser: (username) => dispatch(PostUser(username)),\n});\n\nexport default connect(null, MapDispatchToProps)(CreateUser)\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {viewStories} from '../../../Navigation/route-actions';\nimport {Page} from '../../../Common/Page';\nimport {PostStory} from '../../Actions/StoriesActions';\n\nexport function CreateStory({goToStories, postStory, currentMeeting}) {\n    return (\n        <Page title='Create Story' onBack={() => goToStories(currentMeeting._id)}>\n            <form onSubmit={ (event) => { event.preventDefault(); postStory(event.target.storyInputName.value.trim()); } }>\n                <div className=\"uk-margin\">\n                    <div className=\"uk-inline uk-width-1-1\">\n                        <span className=\"uk-form-icon\" data-uk-icon=\"icon: file-edit\"/>\n                        <input name=\"storyInputName\" className=\"uk-input\" placeholder=\"Name\" type=\"text\"/>\n                    </div>\n                    <button className=\"uk-button uk-button-primary uk-margin-small-top uk-width-1-1\">\n                        CREATE\n                    </button>\n                </div>\n            </form>\n        </Page>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentMeeting: state.currentMeeting\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        goToStories: (meetingId) => dispatch(viewStories(meetingId)),\n        postStory: (storyName) => dispatch(PostStory(storyName))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateStory);\n","import {StoriesAPI} from '../API/Stories.api'\nimport {call, delay, put, race, take} from 'redux-saga/effects';\n\nexport const STORY_ESTIMATES_SUCCESS = 'STORY_ESTIMATES_SUCCESS';\nexport const STORY_ESTIMATES_ERROR = 'STORY_ESTIMATES_ERROR';\nexport const STORY_ESTIMATES_START_POLLING_REQUESTED = 'STORY_ESTIMATES_START_POLLING_REQUESTED';\nexport const STORY_ESTIMATES_STOP_POLLING_REQUESTED = 'STORY_ESTIMATES_STOP_POLLING_REQUESTED';\n\nexport const POLLING_DELAY = 4000;\n\nexport function* watchStoryEstimatesAsync() {\n    while (true) {\n        let payload = yield take(STORY_ESTIMATES_START_POLLING_REQUESTED);\n        yield race({\n            task: call(pollStoryEstimatesAsync, payload),\n            cancel: take(STORY_ESTIMATES_STOP_POLLING_REQUESTED)\n        });\n    }\n}\n\nexport function StartPollingStoryEstimates(storyId) {\n    return {\n        type: STORY_ESTIMATES_START_POLLING_REQUESTED,\n        payload: storyId\n    }\n}\n\nexport function StopPollingStoryEstimates() {\n    return {\n        type: STORY_ESTIMATES_STOP_POLLING_REQUESTED\n    }\n}\n\nexport function* pollStoryEstimatesAsync({payload: storyId}) {\n    while (true) {\n        try {\n            const story = yield call(StoriesAPI.getStoryEstimates, storyId);\n            yield put(StoryEstimatesSuccess(story));\n        }\n        catch (e) {\n            yield put(StoryEstimatesError(e));\n        }\n        yield delay(POLLING_DELAY);\n    }\n}\n\nexport function StoryEstimatesSuccess(storyEstimates) {\n    return {\n        type: STORY_ESTIMATES_SUCCESS,\n        payload: {storyEstimates: storyEstimates}\n    };\n}\n\nexport function StoryEstimatesError(error) {\n    return {\n        type: STORY_ESTIMATES_ERROR,\n        payload: {error}\n    };\n}","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Page} from '../../../Common/Page';\nimport {viewStories} from '../../../Navigation/route-actions';\nimport {UpdateCurrentStory} from \"../../../Meetings/Actions/CurrentMeetingActions\";\nimport {StartPollingStoryEstimates, StopPollingStoryEstimates} from \"../../Actions/StoryEstimatesActions\";\n\nexport function StorySummary({currentMeeting, currentStory, storyEstimates, goToStories, updateCurrentStory, startPollingStoryEstimates, stopPollingStoryEstimates, match}) {\n\n    useEffect(\n        () => {\n            updateCurrentStory(match.params.meetingId, match.params.storyId);\n            startPollingStoryEstimates(match.params.storyId);\n            return () => {\n                updateCurrentStory(match.params.meetingId, null);\n                stopPollingStoryEstimates();\n            };\n        },\n        [updateCurrentStory, startPollingStoryEstimates, stopPollingStoryEstimates, match],\n    );\n\n    const sum = (a, b) => a + b;\n\n    function average(numbers) {\n        return numbers && sum ? Math.ceil(numbers.reduce(sum, 0) / numbers.length) : 0;\n    }\n\n    function hasValidEstimate(estimate) {\n        return estimate.user && estimate.user.name && estimate.estimate;\n    }\n\n    function showAverage() {\n        const estimates = storyEstimates.filter(hasValidEstimate);\n        return estimates.length > 0 ? (\n            <tr className=\"uk-text-bold\" key={'average'}>\n                <td className=\"uk-text-center\">Average</td>\n                <td className=\"uk-text-center\">{average(estimates.map(estimate => estimate.estimate)).toString()}</td>\n            </tr>\n        ) : '';\n    }\n\n    return (\n        <Page title={currentMeeting.name} onBack={() => goToStories(currentMeeting._id)}>\n            <dl className=\"uk-description-list\">\n                <dt># {currentStory.name} :</dt>\n            </dl>\n            <div className=\"uk-align-center uk-width-1-2@m\">\n                <table className=\"uk-table uk-table-divider\">\n                    <thead>\n                    <tr>\n                        <th className=\"uk-text-center\">Name</th>\n                        <th className=\"uk-text-center\">Estimate</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {storyEstimates.filter(hasValidEstimate).map((estimate, index) => {\n                        return (\n                            <tr key={index}>\n                                <td className=\"uk-text-center\">{estimate.user.name}</td>\n                                <td className=\"uk-text-center\">{estimate.estimate}</td>\n                            </tr>\n                        );\n                    })}\n                    {showAverage()}\n                    </tbody>\n                </table>\n            </div>\n        </Page>\n    );\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentMeeting: state.currentMeeting,\n        currentStory: state.currentStory,\n        storyEstimates: state.storyEstimates\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        goToStories: (meetingId) => dispatch(viewStories(meetingId)),\n        updateCurrentStory: (meetingId, storyId) => dispatch(UpdateCurrentStory(meetingId, storyId)),\n        startPollingStoryEstimates: (storyId) => dispatch(StartPollingStoryEstimates(storyId)),\n        stopPollingStoryEstimates: () => dispatch(StopPollingStoryEstimates())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StorySummary)","import { USER_SUCCESS } from '../Actions/UserActions';\n\nconst initialState = {\n    \"_id\": null,\n    \"name\": null\n};\n\nexport default function UserReducer(state = initialState, action) {\n    if (action.type === USER_SUCCESS) {\n        return action.payload.user;\n    } else {\n        return state;\n    }\n}\n","import {STORY_ESTIMATE_SUCCESS} from \"../Actions/StoryEstimateActions\";\n\nconst initialState = 0;\n\nexport default function storyEstimateReducer(state = initialState, action) {\n    if (action.type === STORY_ESTIMATE_SUCCESS) {\n        return action.payload.estimate;\n    } else {\n        return state;\n    }\n}","import { MEETINGS_SUCCESS } from \"../Actions/MeetingsActions\";\n\nexport default function MeetingsReducer(state = [], action) {\n    if (action.type === MEETINGS_SUCCESS) {\n        return action.payload.meetings;\n    } else {\n        return state;\n    }\n}\n","import { STORIES_SUCCESS } from \"../Actions/StoriesActions\";\n\nexport default function StoriesReducer(state = [], action) {\n    if (action.type === STORIES_SUCCESS) {\n        return action.payload.stories;\n    } else {\n        return state;\n    }\n}\n","import { MEETINGS_ERROR } from './Meetings/Actions/MeetingsActions';\nimport { STORY_ESTIMATE_ERROR } from './Stories/Actions/StoryEstimateActions';\nimport { CURRENT_MEETING_ERROR } from './Meetings/Actions/CurrentMeetingActions';\nimport { STORIES_ERROR } from './Stories/Actions/StoriesActions';\nimport { USER_ERROR } from './User/Actions/UserActions';\nimport { CURRENT_STORY_ERROR } from './Meetings/Actions/CurrentStoryActions';\nimport { STORY_ESTIMATES_ERROR } from './Stories/Actions/StoryEstimatesActions';\nimport uikit from \"uikit\";\n\nconst errorActions = [\n  MEETINGS_ERROR,\n  USER_ERROR,\n  CURRENT_MEETING_ERROR,\n  CURRENT_STORY_ERROR,\n  STORY_ESTIMATE_ERROR,\n  STORIES_ERROR,\n  STORY_ESTIMATES_ERROR\n];\n\nexport default function errorReducer(state = null, action) {\n  if (errorActions.some(type => type === action.type)) {\n      uikit.notification({message: '¯\\\\_(ツ)_/¯ Something went wrong...', status: 'danger', timeout: 4000});\n      return action.payload;\n  }\n  return null;\n}\n","import { CURRENT_MEETING_SUCCESS } from \"../Actions/CurrentMeetingActions\";\n\nconst initialState = {\n    \"_id\": null,\n    \"name\": \"Loading Meeting...\",\n    \"current_story\": null\n};\n\nexport default function CurrentMeetingReducer(state = initialState, action) {\n    if (action.type === CURRENT_MEETING_SUCCESS ) {\n        return action.payload.currentMeeting;\n    } else {\n        return state;\n    }\n}\n","import { CURRENT_STORY_SUCCESS } from \"../Actions/CurrentStoryActions\";\n\nconst initialState = {\n    \"_id\": null,\n    \"name\": \"No story selected\"\n};\n\nexport default function CurrentStoryReducer(state = initialState, action) {\n    if (action.type === CURRENT_STORY_SUCCESS ) {\n        return action.payload.currentStory !== null ? action.payload.currentStory : initialState;\n    } else {\n        return state;\n    }\n}\n","import { STORY_ESTIMATES_SUCCESS } from \"../Actions/StoryEstimatesActions\";\n\nconst initialState = [];\n\nexport default function StoryEstimatesReducer(state = initialState, action) {\n    if (action.type === STORY_ESTIMATES_SUCCESS ) {\n        return action.payload.storyEstimates;\n    } else {\n        return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport user from './User/Reducers/UserReducer';\nimport storyEstimate from './Stories/Reducers/StoryEstimateReducer';\nimport meetings from './Meetings/Reducers/MeetingsReducer';\nimport stories from './Stories/Reducers/StoriesReducer';\nimport error from './ErrorReducer';\nimport currentMeeting from './Meetings/Reducers/CurrentMeetingReducer';\nimport currentStory from './Meetings/Reducers/CurrentStoryReducer'\nimport storyEstimates from './Stories/Reducers/StoryEstimatesReducer';\n\nexport default (history) =>\n  combineReducers({\n      router: connectRouter(history),\n      storyEstimate,\n      user,\n      meetings,\n      stories,\n      currentMeeting,\n      currentStory,\n      storyEstimates,\n      error\n    }\n  );\n","import {applyMiddleware, compose, createStore} from 'redux';\nimport {createHashHistory} from 'history';\nimport createRootReducer from './RootReducer';\nimport {routerMiddleware} from \"connected-react-router\";\nimport createSagaMiddleware from 'redux-saga';\nimport {all} from 'redux-saga/effects';\nimport {watchUserAsync} from './User/Actions/UserActions';\nimport {watchMeetingsAsync} from './Meetings/Actions/MeetingsActions';\nimport {watchCurrentMeetingAsync} from './Meetings/Actions/CurrentMeetingActions';\nimport {watchRouterAsync} from './Navigation/route-actions';\nimport {watchStoriesAsync} from './Stories/Actions/StoriesActions';\nimport {watchStoryEstimateAsync} from './Stories/Actions/StoryEstimateActions';\nimport {watchCurrentStoryAsync} from './Meetings/Actions/CurrentStoryActions'\nimport {watchStoryEstimatesAsync} from './Stories/Actions/StoryEstimatesActions';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const history = createHashHistory();\n\nfunction* rootSaga() {\n    yield all([\n        watchUserAsync(),\n        watchMeetingsAsync(),\n        watchCurrentMeetingAsync(),\n        watchStoryEstimateAsync(),\n        watchCurrentMeetingAsync(),\n        watchCurrentStoryAsync(),\n        watchStoryEstimatesAsync(),\n        watchRouterAsync(),\n        watchStoriesAsync()\n    ]);\n}\n\nexport default function store() {\n    const store = createStore(\n        createRootReducer(history),\n        composeEnhancers(\n            applyMiddleware(\n                routerMiddleware(history),\n                sagaMiddleware\n        ))\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n};\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport './index.css';\n\nconst storeConfig = store();\n\nReactDOM.render(\n    <Provider store={storeConfig}>\n        <App />\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {Route} from \"react-router-dom\";\nimport React from 'react';\nimport Meetings from '../Meetings/Components/Meetings/Meetings';\nimport Stories from '../Stories/Components/Stories/Stories';\nimport StoryEstimate from '../Stories/Components/StoryEstimate/StoryEstimate';\nimport CreateMeeting from '../Meetings/Components/CreateMeeting/CreateMeeting';\nimport CreateUser from '../User/Components/CreateUser';\nimport CreateStory from '../Stories/Components/CreateStory/CreateStory';\nimport StorySummary from '../Stories/Components/StorySummary/StorySummary';\nimport {history} from \"../store\";\nimport {ConnectedRouter} from \"connected-react-router\";\n\nexport default function App() {\n\n  return (\n      <ConnectedRouter history={history}>\n          <Route exact path=\"/\" component={CreateUser}/>\n          <Route path=\"/meetings/\" component={Meetings} />\n          <Route path=\"/meeting/create/\" component={CreateMeeting} />\n          <Route path=\"/meeting/:meetingId/estimate/\" component={StoryEstimate} />\n          <Route path=\"/meeting/:meetingId/stories/\" component={Stories} />\n          <Route path=\"/story/create/\" component={CreateStory} />\n          <Route path=\"/meeting/:meetingId/story/:storyId/summary/\" component={StorySummary} />\n      </ConnectedRouter>\n  );\n}\n"],"sourceRoot":""}